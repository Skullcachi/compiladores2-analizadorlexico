
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadorlexico;

import java_cup.runtime.*;
import java.io.FileReader;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class asintactico extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public asintactico() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public asintactico(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public asintactico(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0129\000\002\002\004\000\002\002\004\000\002\002" +
    "\002\000\002\003\003\000\002\004\004\000\002\005\007" +
    "\000\002\005\003\000\002\006\004\000\002\006\003\000" +
    "\002\007\004\000\002\007\003\000\002\010\004\000\002" +
    "\010\005\000\002\011\004\000\002\011\003\000\002\012" +
    "\005\000\002\012\003\000\002\013\005\000\002\013\003" +
    "\000\002\014\005\000\002\014\003\000\002\015\003\000" +
    "\002\015\003\000\002\033\004\000\002\034\005\000\002" +
    "\034\002\000\002\035\005\000\002\035\002\000\002\036" +
    "\004\000\002\036\002\000\002\016\004\000\002\020\005" +
    "\000\002\020\005\000\002\020\002\000\002\021\004\000" +
    "\002\022\005\000\002\022\005\000\002\022\002\000\002" +
    "\023\005\000\002\023\003\000\002\023\003\000\002\023" +
    "\004\000\002\023\003\000\002\037\006\000\002\037\006" +
    "\000\002\037\006\000\002\037\006\000\002\037\006\000" +
    "\002\040\004\000\002\041\003\000\002\041\003\000\002" +
    "\041\002\000\002\042\003\000\002\042\004\000\002\043" +
    "\004\000\002\043\002\000\002\044\004\000\002\045\003" +
    "\000\002\045\003\000\002\045\002\000\002\046\003\000" +
    "\002\046\004\000\002\046\003\000\002\047\004\000\002" +
    "\047\002\000\002\050\004\000\002\051\003\000\002\051" +
    "\003\000\002\051\002\000\002\052\004\000\002\052\003" +
    "\000\002\053\004\000\002\053\002\000\002\024\005\000" +
    "\002\024\002\000\002\025\004\000\002\025\002\000\002" +
    "\026\005\000\002\026\004\000\002\027\003\000\002\027" +
    "\002\000\002\030\004\000\002\031\004\000\002\032\004" +
    "\000\002\032\003\000\002\054\004\000\002\055\003\000" +
    "\002\055\003\000\002\056\005\000\002\056\002\000\002" +
    "\057\004\000\002\057\002\000\002\060\005\000\002\061" +
    "\003\000\002\061\003\000\002\062\004\000\002\062\005" +
    "\000\002\063\004\000\002\063\005\000\002\063\002\000" +
    "\002\064\004\000\002\064\005\000\002\065\006\000\002" +
    "\066\003\000\002\066\002\000\002\067\005\000\002\067" +
    "\004\000\002\067\005\000\002\070\004\000\002\070\003" +
    "\000\002\070\002\000\002\071\003\000\002\071\002\000" +
    "\002\072\010\000\002\072\010\000\002\073\006\000\002" +
    "\074\004\000\002\075\003\000\002\075\003\000\002\075" +
    "\002\000\002\076\004\000\002\077\003\000\002\077\003" +
    "\000\002\077\002\000\002\100\004\000\002\100\004\000" +
    "\002\100\004\000\002\100\002\000\002\101\003\000\002" +
    "\101\002\000\002\102\004\000\002\103\006\000\002\103" +
    "\003\000\002\104\004\000\002\105\005\000\002\105\006" +
    "\000\002\106\004\000\002\106\002\000\002\107\004\000" +
    "\002\107\003\000\002\110\004\000\002\110\006\000\002" +
    "\111\004\000\002\111\010\000\002\111\010\000\002\112" +
    "\003\000\002\112\003\000\002\112\003\000\002\112\003" +
    "\000\002\112\003\000\002\112\003\000\002\112\003\000" +
    "\002\112\003\000\002\113\004\000\002\113\004\000\002" +
    "\113\005\000\002\113\006\000\002\113\005\000\002\113" +
    "\005\000\002\114\005\000\002\114\006\000\002\114\005" +
    "\000\002\115\003\000\002\115\002\000\002\116\005\000" +
    "\002\116\002\000\002\117\004\000\002\117\002\000\002" +
    "\120\003\000\002\120\003\000\002\121\003\000\002\122" +
    "\003\000\002\122\004\000\002\123\004\000\002\124\004" +
    "\000\002\124\003\000\002\125\007\000\002\126\005\000" +
    "\002\126\003\000\002\126\003\000\002\127\006\000\002" +
    "\127\012\000\002\127\006\000\002\127\006\000\002\127" +
    "\010\000\002\127\007\000\002\127\006\000\002\127\010" +
    "\000\002\127\006\000\002\127\012\000\002\130\004\000" +
    "\002\130\003\000\002\130\003\000\002\131\004\000\002" +
    "\131\002\000\002\132\003\000\002\132\006\000\002\132" +
    "\006\000\002\132\006\000\002\132\005\000\002\133\003" +
    "\000\002\133\004\000\002\134\004\000\002\134\003\000" +
    "\002\135\005\000\002\135\005\000\002\136\007\000\002" +
    "\137\005\000\002\140\005\000\002\140\002\000\002\141" +
    "\004\000\002\142\004\000\002\142\003\000\002\143\007" +
    "\000\002\143\003\000\002\143\003\000\002\143\010\000" +
    "\002\144\005\000\002\144\003\000\002\145\005\000\002" +
    "\145\003\000\002\146\006\000\002\147\003\000\002\147" +
    "\003\000\002\147\003\000\002\147\003\000\002\147\003" +
    "\000\002\150\004\000\002\151\003\000\002\151\004\000" +
    "\002\152\004\000\002\152\003\000\002\153\004\000\002" +
    "\154\003\000\002\154\003\000\002\155\005\000\002\155" +
    "\005\000\002\155\005\000\002\155\002\000\002\156\003" +
    "\000\002\156\003\000\002\156\003\000\002\157\003\000" +
    "\002\157\003\000\002\160\003\000\002\160\003\000\002" +
    "\160\003\000\002\161\003\000\002\161\003\000\002\162" +
    "\003\000\002\162\003\000\002\162\003\000\002\162\003" +
    "\000\002\163\003\000\002\163\003\000\002\163\003\000" +
    "\002\164\003\000\002\165\003\000\002\165\004\000\002" +
    "\165\004\000\002\165\004\000\002\165\004\000\002\165" +
    "\004\000\002\165\004\000\002\165\004\000\002\166\004" +
    "\000\002\166\004\000\002\166\002\000\002\167\003\000" +
    "\002\167\004\000\002\171\004\000\002\171\003\000\002" +
    "\171\002\000\002\172\003\000\002\173\005\000\002\174" +
    "\010\000\002\174\010\000\002\175\004\000\002\175\003" +
    "\000\002\176\004\000\002\177\004\000\002\177\004\000" +
    "\002\177\004\000\002\177\004\000\002\177\004\000\002" +
    "\177\004\000\002\177\004\000\002\177\004\000\002\177" +
    "\004\000\002\177\004\000\002\177\004\000\002\177\004" +
    "\000\002\177\004\000\002\200\005\000\002\200\002\000" +
    "\002\201\005\000\002\201\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u023e\000\006\002\uffff\116\uffff\001\002\000\006\002" +
    "\006\116\005\001\002\000\012\165\012\u0114\015\u0157\017" +
    "\u015a\013\001\002\000\004\002\001\001\002\000\006\002" +
    "\ufffe\116\ufffe\001\002\000\006\002\000\116\000\001\002" +
    "\000\014\165\032\172\033\306\025\u0133\023\u014b\030\001" +
    "\002\000\006\u0157\017\u015a\013\001\002\000\044\016\uffe8" +
    "\074\uffe8\165\uffe8\166\uffe8\172\uffe8\213\uffe8\226\uffe8\234" +
    "\uffe8\273\uffe8\306\uffe8\347\uffe8\u010b\uffe8\u0133\uffe8\u014b\uffe8" +
    "\u014c\uffe8\u014d\u0237\u015a\uffe8\001\002\000\006\002\ufff7\116" +
    "\ufff7\001\002\000\004\u0150\u022f\001\002\000\006\002\ufffb" +
    "\116\ufffb\001\002\000\004\u015a\021\001\002\000\006\002" +
    "\ufffd\116\ufffd\001\002\000\014\165\032\172\033\306\025" +
    "\u0133\023\u014b\030\001\002\000\006\002\uffed\116\uffed\001" +
    "\002\000\036\023\165\072\176\156\171\172\uff13\220\134" +
    "\244\201\246\150\263\274\u0108\174\u014b\uff13\u0150\225\u0157" +
    "\161\u015a\300\u015b\276\001\002\000\006\002\ufff1\116\ufff1" +
    "\001\002\000\026\023\165\072\176\156\171\220\134\244" +
    "\201\246\150\u0108\174\u0150\225\u0157\161\u015a\u0212\001\002" +
    "\000\006\002\ufff3\116\ufff3\001\002\000\006\002\ufff5\116" +
    "\ufff5\001\002\000\006\002\uffec\116\uffec\001\002\000\012" +
    "\165\032\172\033\u0133\023\u014b\030\001\002\000\014\276" +
    "\037\277\043\u0150\042\u0157\036\u015a\013\001\002\000\006" +
    "\002\uffeb\116\uffeb\001\002\000\012\172\033\u0133\023\u014b" +
    "\030\u014c\u020a\001\002\000\036\016\054\074\uff93\166\uff93" +
    "\172\uff93\213\uff93\226\uff93\234\uff93\273\uff93\347\uff93\u010b" +
    "\uff93\u0133\uff93\u014b\uff93\u014c\uff93\u015a\055\001\002\000\004" +
    "\u015a\u01fb\001\002\000\004\u0150\u01f6\001\002\000\026\074" +
    "\061\166\062\172\uff9e\213\065\226\uff86\234\057\347\064" +
    "\u0133\uff9e\u014b\uff9e\u014c\uff9e\001\002\000\034\016\054\074" +
    "\uff93\166\uff93\172\uff93\213\uff93\226\uff93\234\uff93\273\uff93" +
    "\347\uff93\u0133\uff93\u014b\uff93\u014c\uff93\u015a\055\001\002\000" +
    "\004\226\051\001\002\000\004\u0150\044\001\002\000\004" +
    "\u015a\045\001\002\000\004\u014c\046\001\002\000\004\u015b" +
    "\047\001\002\000\004\u0151\050\001\002\000\034\016\uff8f" +
    "\074\uff8f\166\uff8f\172\uff8f\213\uff8f\226\uff8f\234\uff8f\273" +
    "\uff8f\347\uff8f\u0133\uff8f\u014b\uff8f\u014c\uff8f\u015a\uff8f\001\002" +
    "\000\004\u0151\052\001\002\000\012\172\uffa1\u0133\uffa1\u014b" +
    "\uffa1\u014c\uffa1\001\002\000\030\074\uff97\166\uff97\172\uff97" +
    "\213\uff97\226\uff97\234\uff97\273\uff97\347\uff97\u0133\uff97\u014b" +
    "\uff97\u014c\uff97\001\002\000\004\u015a\056\001\002\000\032" +
    "\074\uff94\166\uff94\172\uff94\213\uff94\226\uff94\234\uff94\273" +
    "\uff94\347\uff94\u010b\uff94\u0133\uff94\u014b\uff94\u014c\uff94\001\002" +
    "\000\032\074\uff95\166\uff95\172\uff95\213\uff95\226\uff95\234" +
    "\uff95\273\uff95\347\uff95\u010b\uff95\u0133\uff95\u014b\uff95\u014c\uff95" +
    "\001\002\000\006\226\uff80\305\071\001\002\000\012\276" +
    "\037\277\043\u0157\036\u015a\013\001\002\000\004\226\074" +
    "\001\002\000\006\226\uff80\305\071\001\002\000\012\172" +
    "\uffa2\u0133\uffa2\u014b\uffa2\u014c\uffa2\001\002\000\006\226\uff80" +
    "\305\071\001\002\000\004\226\uff88\001\002\000\004\226" +
    "\uff87\001\002\000\004\226\070\001\002\000\012\276\uff89" +
    "\277\uff89\u0157\uff89\u015a\uff89\001\002\000\004\226\uff81\001" +
    "\002\000\004\226\uff84\001\002\000\004\226\uff83\001\002" +
    "\000\026\074\100\166\062\172\uff99\213\065\226\uff86\234" +
    "\057\347\064\u0133\uff99\u014b\uff99\u014c\uff99\001\002\000\012" +
    "\276\037\277\043\u0157\036\u015a\013\001\002\000\012\172" +
    "\uff9f\u0133\uff9f\u014b\uff9f\u014c\uff9f\001\002\000\012\172\uff9a" +
    "\u0133\uff9a\u014b\uff9a\u014c\uff9a\001\002\000\004\226\101\001" +
    "\002\000\026\074\100\166\062\172\uff99\213\065\226\uff86" +
    "\234\057\347\064\u0133\uff99\u014b\uff99\u014c\uff99\001\002\000" +
    "\012\172\uff9c\u0133\uff9c\u014b\uff9c\u014c\uff9c\001\002\000\012" +
    "\172\uff9d\u0133\uff9d\u014b\uff9d\u014c\uff9d\001\002\000\004\273" +
    "\105\001\002\000\010\243\107\263\110\u0150\111\001\002" +
    "\000\004\013\uff7d\001\002\000\004\u0150\u01e2\001\002\000" +
    "\106\023\165\040\132\041\125\043\130\065\163\070\136" +
    "\072\176\100\172\105\202\156\171\163\140\220\134\234" +
    "\154\242\133\244\201\246\150\251\131\255\167\256\146" +
    "\265\173\347\177\370\155\371\203\377\124\u0107\126\u0108" +
    "\174\u0109\153\u0118\147\u011b\144\u0126\200\u013a\152\u0150\225" +
    "\u0157\161\u015a\141\001\002\000\006\263\110\u0150\111\001" +
    "\002\000\004\013\115\001\002\000\026\074\100\166\062" +
    "\172\uff99\213\065\226\uff86\234\057\347\064\u0133\uff99\u014b" +
    "\uff99\u014c\uff99\001\002\000\012\172\uff9b\u0133\uff9b\u014b\uff9b" +
    "\u014c\uff9b\001\002\000\010\243\107\263\110\u0150\111\001" +
    "\002\000\030\074\uff7f\166\uff7f\172\uff7f\213\uff7f\226\uff7f" +
    "\234\uff7f\347\uff7f\u0133\uff7f\u014b\uff7f\u014c\uff7f\u0151\uff7f\001" +
    "\002\000\030\074\uff7c\166\uff7c\172\uff7c\213\uff7c\226\uff7c" +
    "\234\uff7c\347\uff7c\u0133\uff7c\u014b\uff7c\u014c\uff7c\u0151\uff7c\001" +
    "\002\000\004\u0151\121\001\002\000\010\013\uff78\303\123" +
    "\u0151\uff78\001\002\000\006\013\uff7a\u0151\uff7a\001\002\000" +
    "\110\023\165\040\132\041\125\043\130\065\163\070\136" +
    "\072\176\100\172\105\202\156\171\163\140\220\134\234" +
    "\154\242\133\244\201\246\150\251\131\255\167\256\146" +
    "\263\142\265\173\347\177\370\155\371\203\377\124\u0107" +
    "\126\u0108\174\u0109\153\u0118\147\u011b\144\u0126\200\u013a\152" +
    "\u0150\145\u0157\161\u015a\141\001\002\000\004\u0150\u01dd\001" +
    "\002\000\004\u0150\u01d6\001\002\000\004\u0150\u01cf\001\002" +
    "\000\040\013\uff6f\026\uff6f\140\uff6f\206\uff6f\224\uff6f\236" +
    "\uff6f\263\uff6f\303\uff6f\u0141\uff6f\u0142\uff6f\u0143\uff6f\u0144\uff6f" +
    "\u0147\uff6f\u014c\uff6f\u0151\uff6f\001\002\000\004\u0150\u01cc\001" +
    "\002\000\004\u0150\u01c9\001\002\000\034\023\165\072\176" +
    "\156\171\220\134\244\201\246\150\263\274\u0108\174\u0131" +
    "\u01bb\u0150\225\u0157\161\u015a\300\u015b\276\001\002\000\004" +
    "\u0150\u01b8\001\002\000\112\013\uffda\016\uffda\017\uffda\026" +
    "\uffda\054\uffda\120\uffda\134\uffda\135\uffda\140\uffda\165\uffda" +
    "\172\uffda\206\uffda\223\uffda\224\uffda\236\uffda\263\uffda\303" +
    "\uffda\314\uffda\353\uffda\u010e\uffda\u0131\uffda\u0133\uffda\u013c\uffda" +
    "\u013d\uffda\u013e\uffda\u013f\uffda\u0140\uffda\u0141\uffda\u0142\uffda\u0143" +
    "\uffda\u0144\uffda\u0147\uffda\u014b\uffda\u014c\uffda\u0151\uffda\u015a\uffda" +
    "\001\002\000\050\013\uffd7\026\uffd7\140\uffd7\206\uffd7\224" +
    "\uffd7\236\uffd7\263\uffd7\303\uffd7\u013c\uffd7\u013d\uffd7\u013e\uffd7" +
    "\u013f\uffd7\u0141\uffd7\u0142\uffd7\u0143\uffd7\u0144\uffd7\u0147\uffd7\u014c" +
    "\uffd7\u0151\uffd7\001\002\000\004\u0150\u0185\001\002\000\040" +
    "\013\uff69\026\uff69\140\uff69\206\uff69\224\uff69\236\uff69\263" +
    "\uff69\303\uff69\u0141\uff69\u0142\uff69\u0143\uff69\u0144\uff69\u0147\uff69" +
    "\u014c\uff69\u0151\uff69\001\002\000\004\u0150\u017d\001\002\000" +
    "\040\013\uff70\026\uff70\140\uff70\206\uff70\224\uff70\236\uff70" +
    "\263\uff70\303\uff70\u0141\uff70\u0142\uff70\u0143\uff70\u0144\uff70\u0147" +
    "\uff70\u014c\uff70\u0151\uff70\001\002\000\106\023\165\040\132" +
    "\041\125\043\130\065\163\070\136\072\176\100\172\105" +
    "\202\156\171\163\140\220\134\234\154\242\133\244\201" +
    "\246\150\251\131\255\167\256\146\265\173\347\177\370" +
    "\155\371\203\377\124\u0107\126\u0108\174\u0109\153\u0118\147" +
    "\u011b\144\u0126\200\u013a\152\u0150\145\u0157\161\u015a\141\001" +
    "\002\000\026\026\u015d\206\u015a\224\u0160\236\u015f\263\u015e" +
    "\u0141\320\u0142\305\u0143\321\u0144\314\u0147\307\001\002\000" +
    "\004\u0150\u0154\001\002\000\026\023\165\072\176\156\171" +
    "\220\134\244\201\246\150\263\110\u0108\174\u0150\u0150\u0157" +
    "\161\001\002\000\004\u012b\u0118\001\002\000\004\u0150\u0111" +
    "\001\002\000\004\u0150\u010e\001\002\000\040\013\uff6c\026" +
    "\uff6c\140\uff6c\206\uff6c\224\uff6c\236\uff6c\263\uff6c\303\uff6c" +
    "\u0141\uff6c\u0142\uff6c\u0143\uff6c\u0144\uff6c\u0147\uff6c\u014c\uff6c\u0151" +
    "\uff6c\001\002\000\004\u0150\u010b\001\002\000\040\013\uff2b" +
    "\026\uff2b\140\uff2b\206\uff2b\224\uff2b\236\uff2b\263\uff2b\303" +
    "\uff2b\u0141\uff2b\u0142\uff2b\u0143\uff2b\u0144\uff2b\u0147\uff2b\u014c\uff2b" +
    "\u0151\uff2b\001\002\000\004\u0150\u0106\001\002\000\040\013" +
    "\uff2a\026\uff2a\140\uff2a\206\uff2a\224\uff2a\236\uff2a\263\uff2a" +
    "\303\uff2a\u0141\uff2a\u0142\uff2a\u0143\uff2a\u0144\uff2a\u0147\uff2a\u014c" +
    "\uff2a\u0151\uff2a\001\002\000\040\013\uff6a\026\uff6a\140\uff6a" +
    "\206\uff6a\224\uff6a\236\uff6a\263\uff6a\303\uff6a\u0141\uff6a\u0142" +
    "\uff6a\u0143\uff6a\u0144\uff6a\u0147\uff6a\u014c\uff6a\u0151\uff6a\001\002" +
    "\000\006\013\uff76\u0151\uff76\001\002\000\006\013\uff79\u0151" +
    "\uff79\001\002\000\004\u015a\u0105\001\002\000\040\013\uff6b" +
    "\026\uff6b\140\uff6b\206\uff6b\224\uff6b\236\uff6b\263\uff6b\303" +
    "\uff6b\u0141\uff6b\u0142\uff6b\u0143\uff6b\u0144\uff6b\u0147\uff6b\u014c\uff6b" +
    "\u0151\uff6b\001\002\000\004\u0150\375\001\002\000\010\013" +
    "\uff78\303\123\u0151\uff78\001\002\000\004\u0150\360\001\002" +
    "\000\112\013\uffdc\016\uffdc\017\uffdc\026\uffdc\054\uffdc\120" +
    "\uffdc\134\uffdc\135\uffdc\140\uffdc\165\uffdc\172\uffdc\206\uffdc" +
    "\223\uffdc\224\uffdc\236\uffdc\263\uffdc\303\uffdc\314\uffdc\353" +
    "\uffdc\u010e\uffdc\u0131\uffdc\u0133\uffdc\u013c\uffdc\u013d\uffdc\u013e\353" +
    "\u013f\351\u0140\uffdc\u0141\uffdc\u0142\uffdc\u0143\uffdc\u0144\uffdc\u0147" +
    "\uffdc\u014b\uffdc\u014c\uffdc\u0151\uffdc\u015a\uffdc\001\002\000\004" +
    "\u0150\346\001\002\000\112\013\uffe0\016\uffe0\017\uffe0\026" +
    "\uffe0\054\uffe0\120\uffe0\134\uffe0\135\uffe0\140\uffe0\165\uffe0" +
    "\172\uffe0\206\uffe0\223\uffe0\224\uffe0\236\uffe0\263\uffe0\303" +
    "\uffe0\314\uffe0\353\uffe0\u010e\uffe0\u0131\uffe0\u0133\uffe0\u013c\337" +
    "\u013d\340\u013e\uffe0\u013f\uffe0\u0140\uffe0\u0141\uffe0\u0142\uffe0\u0143" +
    "\uffe0\u0144\uffe0\u0147\uffe0\u014b\uffe0\u014c\uffe0\u0151\uffe0\u015a\uffe0" +
    "\001\002\000\112\013\uffd9\016\uffd9\017\uffd9\026\uffd9\054" +
    "\uffd9\120\uffd9\134\uffd9\135\uffd9\140\uffd9\165\uffd9\172\uffd9" +
    "\206\uffd9\223\uffd9\224\uffd9\236\uffd9\263\uffd9\303\uffd9\314" +
    "\uffd9\353\uffd9\u010e\uffd9\u0131\uffd9\u0133\uffd9\u013c\uffd9\u013d\uffd9" +
    "\u013e\uffd9\u013f\uffd9\u0140\uffd9\u0141\uffd9\u0142\uffd9\u0143\uffd9\u0144" +
    "\uffd9\u0147\uffd9\u014b\uffd9\u014c\uffd9\u0151\uffd9\u015a\uffd9\001\002" +
    "\000\052\013\uff3e\016\uff3e\017\uff3e\026\uff3e\054\uff3e\120" +
    "\uff3e\140\uff3e\206\uff3e\224\uff3e\236\uff3e\263\uff3e\303\uff3e" +
    "\u0141\uff3e\u0142\uff3e\u0143\uff3e\u0144\uff3e\u0147\uff3e\u014c\uff3e\u0151" +
    "\uff3e\u015a\uff3e\001\002\000\004\u0150\273\001\002\000\004" +
    "\u0150\270\001\002\000\040\013\uff6e\026\uff6e\140\uff6e\206" +
    "\uff6e\224\uff6e\236\uff6e\263\uff6e\303\uff6e\u0141\uff6e\u0142\uff6e" +
    "\u0143\uff6e\u0144\uff6e\u0147\uff6e\u014c\uff6e\u0151\uff6e\001\002\000" +
    "\004\u0150\253\001\002\000\004\u0150\246\001\002\000\004" +
    "\u0150\237\001\002\000\004\u0150\217\001\002\000\004\u0150" +
    "\211\001\002\000\004\231\204\001\002\000\006\u0157\207" +
    "\u015a\205\001\002\000\052\013\uff36\016\uff36\017\uff36\026" +
    "\uff36\054\uff36\120\uff36\140\uff36\206\uff36\224\uff36\236\uff36" +
    "\263\uff36\303\uff36\u0141\uff36\u0142\uff36\u0143\uff36\u0144\uff36\u0147" +
    "\uff36\u014c\uff36\u0151\uff36\u015a\uff36\001\002\000\052\013\uff3a" +
    "\016\uff3a\017\uff3a\026\uff3a\054\uff3a\120\uff3a\140\uff3a\206" +
    "\uff3a\224\uff3a\236\uff3a\263\uff3a\303\uff3a\u0141\uff3a\u0142\uff3a" +
    "\u0143\uff3a\u0144\uff3a\u0147\uff3a\u014c\uff3a\u0151\uff3a\u015a\uff3a\001" +
    "\002\000\004\u015a\210\001\002\000\052\013\uff37\016\uff37" +
    "\017\uff37\026\uff37\054\uff37\120\uff37\140\uff37\206\uff37\224" +
    "\uff37\236\uff37\263\uff37\303\uff37\u0141\uff37\u0142\uff37\u0143\uff37" +
    "\u0144\uff37\u0147\uff37\u014c\uff37\u0151\uff37\u015a\uff37\001\002\000" +
    "\006\u0157\213\u015b\212\001\002\000\004\u0151\uff39\001\002" +
    "\000\004\u015a\216\001\002\000\004\u0151\215\001\002\000" +
    "\052\013\uff3d\016\uff3d\017\uff3d\026\uff3d\054\uff3d\120\uff3d" +
    "\140\uff3d\206\uff3d\224\uff3d\236\uff3d\263\uff3d\303\uff3d\u0141" +
    "\uff3d\u0142\uff3d\u0143\uff3d\u0144\uff3d\u0147\uff3d\u014c\uff3d\u0151\uff3d" +
    "\u015a\uff3d\001\002\000\004\u0151\uff38\001\002\000\032\010" +
    "\221\023\uffbd\072\uffbd\126\220\156\uffbd\220\uffbd\244\uffbd" +
    "\246\uffbd\u0108\uffbd\u0150\uffbd\u0157\uffbd\u015a\uffbd\001\002\000" +
    "\026\023\uffbe\072\uffbe\156\uffbe\220\uffbe\244\uffbe\246\uffbe" +
    "\u0108\uffbe\u0150\uffbe\u0157\uffbe\u015a\uffbe\001\002\000\026\023" +
    "\uffbf\072\uffbf\156\uffbf\220\uffbf\244\uffbf\246\uffbf\u0108\uffbf" +
    "\u0150\uffbf\u0157\uffbf\u015a\uffbf\001\002\000\004\u0151\236\001" +
    "\002\000\026\023\165\072\176\156\171\220\134\244\201" +
    "\246\150\u0108\174\u0150\225\u0157\161\u015a\227\001\002\000" +
    "\112\013\uffd7\016\uffd7\017\uffd7\026\uffd7\054\uffd7\120\uffd7" +
    "\134\uffd7\135\uffd7\140\uffd7\165\uffd7\172\uffd7\206\uffd7\223" +
    "\uffd7\224\uffd7\236\uffd7\263\uffd7\303\uffd7\314\uffd7\353\uffd7" +
    "\u010e\uffd7\u0131\uffd7\u0133\uffd7\u013c\uffd7\u013d\uffd7\u013e\uffd7\u013f" +
    "\uffd7\u0140\uffd7\u0141\uffd7\u0142\uffd7\u0143\uffd7\u0144\uffd7\u0147\uffd7" +
    "\u014b\uffd7\u014c\uffd7\u0151\uffd7\u015a\uffd7\001\002\000\024\023" +
    "\165\072\176\156\171\220\134\244\201\246\150\u0108\174" +
    "\u0150\225\u0157\161\001\002\000\004\u0151\uffbb\001\002\000" +
    "\006\u014d\232\u0151\uffb9\001\002\000\004\u0151\uffc0\001\002" +
    "\000\004\u0151\uffbc\001\002\000\004\u015a\233\001\002\000" +
    "\004\u0151\uffba\001\002\000\004\u0151\235\001\002\000\112" +
    "\013\uffdb\016\uffdb\017\uffdb\026\uffdb\054\uffdb\120\uffdb\134" +
    "\uffdb\135\uffdb\140\uffdb\165\uffdb\172\uffdb\206\uffdb\223\uffdb" +
    "\224\uffdb\236\uffdb\263\uffdb\303\uffdb\314\uffdb\353\uffdb\u010e" +
    "\uffdb\u0131\uffdb\u0133\uffdb\u013c\uffdb\u013d\uffdb\u013e\uffdb\u013f\uffdb" +
    "\u0140\uffdb\u0141\uffdb\u0142\uffdb\u0143\uffdb\u0144\uffdb\u0147\uffdb\u014b" +
    "\uffdb\u014c\uffdb\u0151\uffdb\u015a\uffdb\001\002\000\112\013\uffd4" +
    "\016\uffd4\017\uffd4\026\uffd4\054\uffd4\120\uffd4\134\uffd4\135" +
    "\uffd4\140\uffd4\165\uffd4\172\uffd4\206\uffd4\223\uffd4\224\uffd4" +
    "\236\uffd4\263\uffd4\303\uffd4\314\uffd4\353\uffd4\u010e\uffd4\u0131" +
    "\uffd4\u0133\uffd4\u013c\uffd4\u013d\uffd4\u013e\uffd4\u013f\uffd4\u0140\uffd4" +
    "\u0141\uffd4\u0142\uffd4\u0143\uffd4\u0144\uffd4\u0147\uffd4\u014b\uffd4\u014c" +
    "\uffd4\u0151\uffd4\u015a\uffd4\001\002\000\010\u0157\242\u015a\241" +
    "\u015b\240\001\002\000\010\165\uff42\u014c\uff42\u0151\uff42\001" +
    "\002\000\010\165\uff41\u014c\uff41\u0151\uff41\001\002\000\004" +
    "\u015a\245\001\002\000\004\u0151\244\001\002\000\052\013" +
    "\uff4b\016\uff4b\017\uff4b\026\uff4b\054\uff4b\120\uff4b\140\uff4b" +
    "\206\uff4b\224\uff4b\236\uff4b\263\uff4b\303\uff4b\u0141\uff4b\u0142" +
    "\uff4b\u0143\uff4b\u0144\uff4b\u0147\uff4b\u014c\uff4b\u0151\uff4b\u015a\uff4b" +
    "\001\002\000\010\165\uff43\u014c\uff43\u0151\uff43\001\002\000" +
    "\010\u0157\242\u015a\241\u015b\240\001\002\000\004\u014c\250" +
    "\001\002\000\024\023\165\072\176\156\171\220\134\244" +
    "\201\246\150\u0108\174\u0150\225\u0157\161\001\002\000\004" +
    "\u0151\252\001\002\000\052\013\uff46\016\uff46\017\uff46\026" +
    "\uff46\054\uff46\120\uff46\140\uff46\206\uff46\224\uff46\236\uff46" +
    "\263\uff46\303\uff46\u0141\uff46\u0142\uff46\u0143\uff46\u0144\uff46\u0147" +
    "\uff46\u014c\uff46\u0151\uff46\u015a\uff46\001\002\000\034\010\255" +
    "\023\uffc6\072\uffc6\126\254\156\uffc6\220\uffc6\244\uffc6\246" +
    "\uffc6\u0108\uffc6\u013e\uffc6\u0150\uffc6\u0157\uffc6\u015a\uffc6\001\002" +
    "\000\030\023\uffc7\072\uffc7\156\uffc7\220\uffc7\244\uffc7\246" +
    "\uffc7\u0108\uffc7\u013e\uffc7\u0150\uffc7\u0157\uffc7\u015a\uffc7\001\002" +
    "\000\030\023\uffc8\072\uffc8\156\uffc8\220\uffc8\244\uffc8\246" +
    "\uffc8\u0108\uffc8\u013e\uffc8\u0150\uffc8\u0157\uffc8\u015a\uffc8\001\002" +
    "\000\004\u0151\267\001\002\000\030\023\165\072\176\156" +
    "\171\220\134\244\201\246\150\u0108\174\u013e\260\u0150\225" +
    "\u0157\161\u015a\263\001\002\000\004\u0151\uffc5\001\002\000" +
    "\004\u0151\uffc9\001\002\000\004\u0151\uffc3\001\002\000\006" +
    "\u014d\264\u0151\uffc1\001\002\000\004\u015a\266\001\002\000" +
    "\004\u0151\uffc4\001\002\000\004\u0151\uffc2\001\002\000\112" +
    "\013\uffd5\016\uffd5\017\uffd5\026\uffd5\054\uffd5\120\uffd5\134" +
    "\uffd5\135\uffd5\140\uffd5\165\uffd5\172\uffd5\206\uffd5\223\uffd5" +
    "\224\uffd5\236\uffd5\263\uffd5\303\uffd5\314\uffd5\353\uffd5\u010e" +
    "\uffd5\u0131\uffd5\u0133\uffd5\u013c\uffd5\u013d\uffd5\u013e\uffd5\u013f\uffd5" +
    "\u0140\uffd5\u0141\uffd5\u0142\uffd5\u0143\uffd5\u0144\uffd5\u0147\uffd5\u014b" +
    "\uffd5\u014c\uffd5\u0151\uffd5\u015a\uffd5\001\002\000\032\010\221" +
    "\023\uffbd\072\uffbd\126\220\156\uffbd\220\uffbd\244\uffbd\246" +
    "\uffbd\u0108\uffbd\u0150\uffbd\u0157\uffbd\u015a\uffbd\001\002\000\004" +
    "\u0151\272\001\002\000\112\013\uffd2\016\uffd2\017\uffd2\026" +
    "\uffd2\054\uffd2\120\uffd2\134\uffd2\135\uffd2\140\uffd2\165\uffd2" +
    "\172\uffd2\206\uffd2\223\uffd2\224\uffd2\236\uffd2\263\uffd2\303" +
    "\uffd2\314\uffd2\353\uffd2\u010e\uffd2\u0131\uffd2\u0133\uffd2\u013c\uffd2" +
    "\u013d\uffd2\u013e\uffd2\u013f\uffd2\u0140\uffd2\u0141\uffd2\u0142\uffd2\u0143" +
    "\uffd2\u0144\uffd2\u0147\uffd2\u014b\uffd2\u014c\uffd2\u0151\uffd2\u015a\uffd2" +
    "\001\002\000\034\023\165\072\176\156\171\220\134\244" +
    "\201\246\150\263\274\u0108\174\u014c\uff13\u0150\225\u0157\161" +
    "\u015a\300\u015b\276\001\002\000\052\023\165\026\uff13\072" +
    "\176\156\171\206\uff13\220\134\236\uff13\244\201\246\150" +
    "\263\274\u0108\174\u0141\uff13\u0142\uff13\u0143\uff13\u0144\uff13\u0147" +
    "\uff13\u0150\225\u0157\161\u015a\300\u015b\276\001\002\000\004" +
    "\u013c\326\001\002\000\056\016\uff0f\017\uff0f\026\uff0f\054" +
    "\uff0f\120\uff0f\134\uff0f\135\uff0f\172\uff0f\206\uff0f\236\uff0f" +
    "\u010e\uff0f\u0131\uff0f\u013c\uff0f\u0141\uff0f\u0142\uff0f\u0143\uff0f\u0144" +
    "\uff0f\u0147\uff0f\u014b\uff0f\u014c\uff0f\u0151\uff0f\u015a\uff0f\001\002" +
    "\000\026\u013c\312\u013d\310\u013e\311\u013f\306\u0140\315\u0141" +
    "\320\u0142\305\u0143\321\u0144\314\u0147\307\001\002\000\056" +
    "\016\uff0e\017\uff0e\026\uff0e\054\uff0e\120\uff0e\134\uff0e\135" +
    "\uff0e\172\uff0e\206\uff0e\236\uff0e\u010e\uff0e\u0131\uff0e\u013c\uff0e" +
    "\u0141\uff0e\u0142\uff0e\u0143\uff0e\u0144\uff0e\u0147\uff0e\u014b\uff0e\u014c" +
    "\uff0e\u0151\uff0e\u015a\uff0e\001\002\000\004\u014c\302\001\002" +
    "\000\034\023\165\072\176\156\171\220\134\244\201\246" +
    "\150\263\274\u0108\174\u0150\225\u0151\uff13\u0157\161\u015a\300" +
    "\u015b\276\001\002\000\004\u0151\304\001\002\000\040\013" +
    "\uff29\026\uff29\140\uff29\206\uff29\224\uff29\236\uff29\263\uff29" +
    "\303\uff29\u0141\uff29\u0142\uff29\u0143\uff29\u0144\uff29\u0147\uff29\u014c" +
    "\uff29\u0151\uff29\001\002\000\154\016\uff20\017\uff20\023\uff20" +
    "\026\uff20\040\uff20\041\uff20\043\uff20\054\uff20\070\uff20\072" +
    "\uff20\100\uff20\105\uff20\120\uff20\134\uff20\135\uff20\156\uff20" +
    "\172\uff20\206\uff20\220\uff20\234\uff20\236\uff20\242\uff20\244" +
    "\uff20\246\uff20\251\uff20\255\uff20\256\uff20\265\uff20\347\uff20" +
    "\370\uff20\371\uff20\377\uff20\u0107\uff20\u0108\uff20\u0109\uff20\u010e" +
    "\uff20\u0118\uff20\u011b\uff20\u0126\uff20\u0131\uff20\u013a\uff20\u0141\uff20" +
    "\u0142\uff20\u0143\uff20\u0144\uff20\u0147\uff20\u014b\uff20\u014c\uff20\u0150" +
    "\uff20\u0151\uff20\u0157\uff20\u015a\uff20\u015b\uff20\001\002\000\030" +
    "\023\uff06\072\uff06\156\uff06\220\uff06\244\uff06\246\uff06\u0108" +
    "\uff06\u0150\uff06\u0157\uff06\u015a\uff06\u015b\uff06\001\002\000\154" +
    "\016\uff1f\017\uff1f\023\uff1f\026\uff1f\040\uff1f\041\uff1f\043" +
    "\uff1f\054\uff1f\070\uff1f\072\uff1f\100\uff1f\105\uff1f\120\uff1f" +
    "\134\uff1f\135\uff1f\156\uff1f\172\uff1f\206\uff1f\220\uff1f\234" +
    "\uff1f\236\uff1f\242\uff1f\244\uff1f\246\uff1f\251\uff1f\255\uff1f" +
    "\256\uff1f\265\uff1f\347\uff1f\370\uff1f\371\uff1f\377\uff1f\u0107" +
    "\uff1f\u0108\uff1f\u0109\uff1f\u010e\uff1f\u0118\uff1f\u011b\uff1f\u0126\uff1f" +
    "\u0131\uff1f\u013a\uff1f\u0141\uff1f\u0142\uff1f\u0143\uff1f\u0144\uff1f\u0147" +
    "\uff1f\u014b\uff1f\u014c\uff1f\u0150\uff1f\u0151\uff1f\u0157\uff1f\u015a\uff1f" +
    "\u015b\uff1f\001\002\000\030\023\uff08\072\uff08\156\uff08\220" +
    "\uff08\244\uff08\246\uff08\u0108\uff08\u0150\uff08\u0157\uff08\u015a\uff08" +
    "\u015b\uff08\001\002\000\030\023\uff07\072\uff07\156\uff07\220" +
    "\uff07\244\uff07\246\uff07\u0108\uff07\u0150\uff07\u0157\uff07\u015a\uff07" +
    "\u015b\uff07\001\002\000\030\023\uff10\072\uff10\156\uff10\220" +
    "\uff10\244\uff10\246\uff10\u0108\uff10\u0150\uff10\u0157\uff10\u015a\uff10" +
    "\u015b\uff10\001\002\000\030\023\uff12\072\uff12\156\uff12\220" +
    "\uff12\244\uff12\246\uff12\u0108\uff12\u0150\uff12\u0157\uff12\u015a\uff12" +
    "\u015b\uff12\001\002\000\154\016\uff21\017\uff21\023\uff21\026" +
    "\uff21\040\uff21\041\uff21\043\uff21\054\uff21\070\uff21\072\uff21" +
    "\100\uff21\105\uff21\120\uff21\134\uff21\135\uff21\156\uff21\172" +
    "\uff21\206\uff21\220\uff21\234\uff21\236\uff21\242\uff21\244\uff21" +
    "\246\uff21\251\uff21\255\uff21\256\uff21\265\uff21\347\uff21\370" +
    "\uff21\371\uff21\377\uff21\u0107\uff21\u0108\uff21\u0109\uff21\u010e\uff21" +
    "\u0118\uff21\u011b\uff21\u0126\uff21\u0131\uff21\u013a\uff21\u0141\uff21\u0142" +
    "\uff21\u0143\uff21\u0144\uff21\u0147\uff21\u014b\uff21\u014c\uff21\u0150\uff21" +
    "\u0151\uff21\u0157\uff21\u015a\uff21\u015b\uff21\001\002\000\030\023" +
    "\uff05\072\uff05\156\uff05\220\uff05\244\uff05\246\uff05\u0108\uff05" +
    "\u0150\uff05\u0157\uff05\u015a\uff05\u015b\uff05\001\002\000\030\023" +
    "\uff11\072\uff11\156\uff11\220\uff11\244\uff11\246\uff11\u0108\uff11" +
    "\u0150\uff11\u0157\uff11\u015a\uff11\u015b\uff11\001\002\000\030\023" +
    "\165\072\176\156\171\220\134\244\201\246\150\u0108\174" +
    "\u0150\225\u0157\161\u015a\325\u015b\322\001\002\000\154\016" +
    "\uff22\017\uff22\023\uff22\026\uff22\040\uff22\041\uff22\043\uff22" +
    "\054\uff22\070\uff22\072\uff22\100\uff22\105\uff22\120\uff22\134" +
    "\uff22\135\uff22\156\uff22\172\uff22\206\uff22\220\uff22\234\uff22" +
    "\236\uff22\242\uff22\244\uff22\246\uff22\251\uff22\255\uff22\256" +
    "\uff22\265\uff22\347\uff22\370\uff22\371\uff22\377\uff22\u0107\uff22" +
    "\u0108\uff22\u0109\uff22\u010e\uff22\u0118\uff22\u011b\uff22\u0126\uff22\u0131" +
    "\uff22\u013a\uff22\u0141\uff22\u0142\uff22\u0143\uff22\u0144\uff22\u0147\uff22" +
    "\u014b\uff22\u014c\uff22\u0150\uff22\u0151\uff22\u0157\uff22\u015a\uff22\u015b" +
    "\uff22\001\002\000\154\016\uff23\017\uff23\023\uff23\026\uff23" +
    "\040\uff23\041\uff23\043\uff23\054\uff23\070\uff23\072\uff23\100" +
    "\uff23\105\uff23\120\uff23\134\uff23\135\uff23\156\uff23\172\uff23" +
    "\206\uff23\220\uff23\234\uff23\236\uff23\242\uff23\244\uff23\246" +
    "\uff23\251\uff23\255\uff23\256\uff23\265\uff23\347\uff23\370\uff23" +
    "\371\uff23\377\uff23\u0107\uff23\u0108\uff23\u0109\uff23\u010e\uff23\u0118" +
    "\uff23\u011b\uff23\u0126\uff23\u0131\uff23\u013a\uff23\u0141\uff23\u0142\uff23" +
    "\u0143\uff23\u0144\uff23\u0147\uff23\u014b\uff23\u014c\uff23\u0150\uff23\u0151" +
    "\uff23\u0157\uff23\u015a\uff23\u015b\uff23\001\002\000\054\016\uff0b" +
    "\017\uff0b\026\uff0b\054\uff0b\120\uff0b\134\uff0b\135\uff0b\172" +
    "\uff0b\206\uff0b\236\uff0b\u010e\uff0b\u0131\uff0b\u0141\uff0b\u0142\uff0b" +
    "\u0143\uff0b\u0144\uff0b\u0147\uff0b\u014b\uff0b\u014c\uff0b\u0151\uff0b\u015a" +
    "\uff0b\001\002\000\054\016\uff16\017\uff16\026\uff16\054\uff16" +
    "\120\uff16\134\uff16\135\uff16\172\uff16\206\uff16\236\uff16\u010e" +
    "\uff16\u0131\uff16\u0141\uff16\u0142\uff16\u0143\uff16\u0144\uff16\u0147\uff16" +
    "\u014b\uff16\u014c\uff16\u0151\uff16\u015a\uff16\001\002\000\054\016" +
    "\uff0d\017\uff0d\026\uff0d\054\uff0d\120\uff0d\134\uff0d\135\uff0d" +
    "\172\uff0d\206\uff0d\236\uff0d\u010e\uff0d\u0131\uff0d\u0141\uff0d\u0142" +
    "\uff0d\u0143\uff0d\u0144\uff0d\u0147\uff0d\u014b\uff0d\u014c\uff0d\u0151\uff0d" +
    "\u015a\uff0d\001\002\000\054\016\uff0c\017\uff0c\026\uff0c\054" +
    "\uff0c\120\uff0c\134\uff0c\135\uff0c\172\uff0c\206\uff0c\236\uff0c" +
    "\u010e\uff0c\u0131\uff0c\u0141\uff0c\u0142\uff0c\u0143\uff0c\u0144\uff0c\u0147" +
    "\uff0c\u014b\uff0c\u014c\uff0c\u0151\uff0c\u015a\uff0c\001\002\000\006" +
    "\u015a\300\u015b\276\001\002\000\054\016\uff15\017\uff15\026" +
    "\uff15\054\uff15\120\uff15\134\uff15\135\uff15\172\uff15\206\uff15" +
    "\236\uff15\u010e\uff15\u0131\uff15\u0141\uff15\u0142\uff15\u0143\uff15\u0144" +
    "\uff15\u0147\uff15\u014b\uff15\u014c\uff15\u0151\uff15\u015a\uff15\001\002" +
    "\000\022\026\334\206\331\236\336\u0141\320\u0142\305\u0143" +
    "\321\u0144\314\u0147\307\001\002\000\054\016\uff03\017\uff03" +
    "\026\uff03\054\uff03\120\uff03\134\uff03\135\uff03\172\uff03\206" +
    "\uff03\236\uff03\u010e\uff03\u0131\uff03\u0141\uff03\u0142\uff03\u0143\uff03" +
    "\u0144\uff03\u0147\uff03\u014b\uff03\u014c\uff03\u0151\uff03\u015a\uff03\001" +
    "\002\000\054\016\uff0a\017\uff0a\026\uff0a\054\uff0a\120\uff0a" +
    "\134\uff0a\135\uff0a\172\uff0a\206\uff0a\236\uff0a\u010e\uff0a\u0131" +
    "\uff0a\u0141\uff0a\u0142\uff0a\u0143\uff0a\u0144\uff0a\u0147\uff0a\u014b\uff0a" +
    "\u014c\uff0a\u0151\uff0a\u015a\uff0a\001\002\000\054\016\uff14\017" +
    "\uff14\026\uff14\054\uff14\120\uff14\134\uff14\135\uff14\172\uff14" +
    "\206\uff14\236\uff14\u010e\uff14\u0131\uff14\u0141\uff14\u0142\uff14\u0143" +
    "\uff14\u0144\uff14\u0147\uff14\u014b\uff14\u014c\uff14\u0151\uff14\u015a\uff14" +
    "\001\002\000\054\016\uff04\017\uff04\026\uff04\054\uff04\120" +
    "\uff04\134\uff04\135\uff04\172\uff04\206\uff04\236\uff04\u010e\uff04" +
    "\u0131\uff04\u0141\uff04\u0142\uff04\u0143\uff04\u0144\uff04\u0147\uff04\u014b" +
    "\uff04\u014c\uff04\u0151\uff04\u015a\uff04\001\002\000\054\016\uff09" +
    "\017\uff09\026\uff09\054\uff09\120\uff09\134\uff09\135\uff09\172" +
    "\uff09\206\uff09\236\uff09\u010e\uff09\u0131\uff09\u0141\uff09\u0142\uff09" +
    "\u0143\uff09\u0144\uff09\u0147\uff09\u014b\uff09\u014c\uff09\u0151\uff09\u015a" +
    "\uff09\001\002\000\054\016\uff02\017\uff02\026\uff02\054\uff02" +
    "\120\uff02\134\uff02\135\uff02\172\uff02\206\uff02\236\uff02\u010e" +
    "\uff02\u0131\uff02\u0141\uff02\u0142\uff02\u0143\uff02\u0144\uff02\u0147\uff02" +
    "\u014b\uff02\u014c\uff02\u0151\uff02\u015a\uff02\001\002\000\024\023" +
    "\165\072\176\156\171\220\134\244\201\246\150\u0108\174" +
    "\u0150\225\u0157\161\001\002\000\024\023\165\072\176\156" +
    "\171\220\134\244\201\246\150\u0108\174\u0150\225\u0157\161" +
    "\001\002\000\112\013\uffe3\016\uffe3\017\uffe3\026\uffe3\054" +
    "\uffe3\120\uffe3\134\uffe3\135\uffe3\140\uffe3\165\uffe3\172\uffe3" +
    "\206\uffe3\223\uffe3\224\uffe3\236\uffe3\263\uffe3\303\uffe3\314" +
    "\uffe3\353\uffe3\u010e\uffe3\u0131\uffe3\u0133\uffe3\u013c\uffe3\u013d\uffe3" +
    "\u013e\uffe3\u013f\uffe3\u0140\uffe3\u0141\uffe3\u0142\uffe3\u0143\uffe3\u0144" +
    "\uffe3\u0147\uffe3\u014b\uffe3\u014c\uffe3\u0151\uffe3\u015a\uffe3\001\002" +
    "\000\112\013\uffe0\016\uffe0\017\uffe0\026\uffe0\054\uffe0\120" +
    "\uffe0\134\uffe0\135\uffe0\140\uffe0\165\uffe0\172\uffe0\206\uffe0" +
    "\223\uffe0\224\uffe0\236\uffe0\263\uffe0\303\uffe0\314\uffe0\353" +
    "\uffe0\u010e\uffe0\u0131\uffe0\u0133\uffe0\u013c\337\u013d\340\u013e\uffe0" +
    "\u013f\uffe0\u0140\uffe0\u0141\uffe0\u0142\uffe0\u0143\uffe0\u0144\uffe0\u0147" +
    "\uffe0\u014b\uffe0\u014c\uffe0\u0151\uffe0\u015a\uffe0\001\002\000\112" +
    "\013\uffe1\016\uffe1\017\uffe1\026\uffe1\054\uffe1\120\uffe1\134" +
    "\uffe1\135\uffe1\140\uffe1\165\uffe1\172\uffe1\206\uffe1\223\uffe1" +
    "\224\uffe1\236\uffe1\263\uffe1\303\uffe1\314\uffe1\353\uffe1\u010e" +
    "\uffe1\u0131\uffe1\u0133\uffe1\u013c\uffe1\u013d\uffe1\u013e\uffe1\u013f\uffe1" +
    "\u0140\uffe1\u0141\uffe1\u0142\uffe1\u0143\uffe1\u0144\uffe1\u0147\uffe1\u014b" +
    "\uffe1\u014c\uffe1\u0151\uffe1\u015a\uffe1\001\002\000\112\013\uffe0" +
    "\016\uffe0\017\uffe0\026\uffe0\054\uffe0\120\uffe0\134\uffe0\135" +
    "\uffe0\140\uffe0\165\uffe0\172\uffe0\206\uffe0\223\uffe0\224\uffe0" +
    "\236\uffe0\263\uffe0\303\uffe0\314\uffe0\353\uffe0\u010e\uffe0\u0131" +
    "\uffe0\u0133\uffe0\u013c\337\u013d\340\u013e\uffe0\u013f\uffe0\u0140\uffe0" +
    "\u0141\uffe0\u0142\uffe0\u0143\uffe0\u0144\uffe0\u0147\uffe0\u014b\uffe0\u014c" +
    "\uffe0\u0151\uffe0\u015a\uffe0\001\002\000\112\013\uffe2\016\uffe2" +
    "\017\uffe2\026\uffe2\054\uffe2\120\uffe2\134\uffe2\135\uffe2\140" +
    "\uffe2\165\uffe2\172\uffe2\206\uffe2\223\uffe2\224\uffe2\236\uffe2" +
    "\263\uffe2\303\uffe2\314\uffe2\353\uffe2\u010e\uffe2\u0131\uffe2\u0133" +
    "\uffe2\u013c\uffe2\u013d\uffe2\u013e\uffe2\u013f\uffe2\u0140\uffe2\u0141\uffe2" +
    "\u0142\uffe2\u0143\uffe2\u0144\uffe2\u0147\uffe2\u014b\uffe2\u014c\uffe2\u0151" +
    "\uffe2\u015a\uffe2\001\002\000\024\023\165\072\176\156\171" +
    "\220\134\244\201\246\150\u0108\174\u0150\225\u0157\161\001" +
    "\002\000\004\u0151\350\001\002\000\052\013\uff47\016\uff47" +
    "\017\uff47\026\uff47\054\uff47\120\uff47\140\uff47\206\uff47\224" +
    "\uff47\236\uff47\263\uff47\303\uff47\u0141\uff47\u0142\uff47\u0143\uff47" +
    "\u0144\uff47\u0147\uff47\u014c\uff47\u0151\uff47\u015a\uff47\001\002\000" +
    "\024\023\165\072\176\156\171\220\134\244\201\246\150" +
    "\u0108\174\u0150\225\u0157\161\001\002\000\112\013\uffdf\016" +
    "\uffdf\017\uffdf\026\uffdf\054\uffdf\120\uffdf\134\uffdf\135\uffdf" +
    "\140\uffdf\165\uffdf\172\uffdf\206\uffdf\223\uffdf\224\uffdf\236" +
    "\uffdf\263\uffdf\303\uffdf\314\uffdf\353\uffdf\u010e\uffdf\u0131\uffdf" +
    "\u0133\uffdf\u013c\uffdf\u013d\uffdf\u013e\uffdf\u013f\uffdf\u0140\uffdf\u0141" +
    "\uffdf\u0142\uffdf\u0143\uffdf\u0144\uffdf\u0147\uffdf\u014b\uffdf\u014c\uffdf" +
    "\u0151\uffdf\u015a\uffdf\001\002\000\024\023\165\072\176\156" +
    "\171\220\134\244\201\246\150\u0108\174\u0150\225\u0157\161" +
    "\001\002\000\112\013\uffdc\016\uffdc\017\uffdc\026\uffdc\054" +
    "\uffdc\120\uffdc\134\uffdc\135\uffdc\140\uffdc\165\uffdc\172\uffdc" +
    "\206\uffdc\223\uffdc\224\uffdc\236\uffdc\263\uffdc\303\uffdc\314" +
    "\uffdc\353\uffdc\u010e\uffdc\u0131\uffdc\u0133\uffdc\u013c\uffdc\u013d\uffdc" +
    "\u013e\353\u013f\351\u0140\uffdc\u0141\uffdc\u0142\uffdc\u0143\uffdc\u0144" +
    "\uffdc\u0147\uffdc\u014b\uffdc\u014c\uffdc\u0151\uffdc\u015a\uffdc\001\002" +
    "\000\112\013\uffde\016\uffde\017\uffde\026\uffde\054\uffde\120" +
    "\uffde\134\uffde\135\uffde\140\uffde\165\uffde\172\uffde\206\uffde" +
    "\223\uffde\224\uffde\236\uffde\263\uffde\303\uffde\314\uffde\353" +
    "\uffde\u010e\uffde\u0131\uffde\u0133\uffde\u013c\uffde\u013d\uffde\u013e\uffde" +
    "\u013f\uffde\u0140\uffde\u0141\uffde\u0142\uffde\u0143\uffde\u0144\uffde\u0147" +
    "\uffde\u014b\uffde\u014c\uffde\u0151\uffde\u015a\uffde\001\002\000\112" +
    "\013\uffdc\016\uffdc\017\uffdc\026\uffdc\054\uffdc\120\uffdc\134" +
    "\uffdc\135\uffdc\140\uffdc\165\uffdc\172\uffdc\206\uffdc\223\uffdc" +
    "\224\uffdc\236\uffdc\263\uffdc\303\uffdc\314\uffdc\353\uffdc\u010e" +
    "\uffdc\u0131\uffdc\u0133\uffdc\u013c\uffdc\u013d\uffdc\u013e\353\u013f\351" +
    "\u0140\uffdc\u0141\uffdc\u0142\uffdc\u0143\uffdc\u0144\uffdc\u0147\uffdc\u014b" +
    "\uffdc\u014c\uffdc\u0151\uffdc\u015a\uffdc\001\002\000\112\013\uffdd" +
    "\016\uffdd\017\uffdd\026\uffdd\054\uffdd\120\uffdd\134\uffdd\135" +
    "\uffdd\140\uffdd\165\uffdd\172\uffdd\206\uffdd\223\uffdd\224\uffdd" +
    "\236\uffdd\263\uffdd\303\uffdd\314\uffdd\353\uffdd\u010e\uffdd\u0131" +
    "\uffdd\u0133\uffdd\u013c\uffdd\u013d\uffdd\u013e\uffdd\u013f\uffdd\u0140\uffdd" +
    "\u0141\uffdd\u0142\uffdd\u0143\uffdd\u0144\uffdd\u0147\uffdd\u014b\uffdd\u014c" +
    "\uffdd\u0151\uffdd\u015a\uffdd\001\002\000\032\010\364\023\uffce" +
    "\072\uffce\126\361\156\uffce\220\uffce\244\uffce\246\uffce\u0108" +
    "\uffce\u0150\uffce\u0157\uffce\u015a\uffce\001\002\000\026\023\uffcf" +
    "\072\uffcf\156\uffcf\220\uffcf\244\uffcf\246\uffcf\u0108\uffcf\u0150" +
    "\uffcf\u0157\uffcf\u015a\uffcf\001\002\000\004\u0151\373\001\002" +
    "\000\026\023\165\072\176\156\171\220\134\244\201\246" +
    "\150\u0108\174\u0150\225\u0157\161\u015a\367\001\002\000\026" +
    "\023\uffd0\072\uffd0\156\uffd0\220\uffd0\244\uffd0\246\uffd0\u0108" +
    "\uffd0\u0150\uffd0\u0157\uffd0\u015a\uffd0\001\002\000\004\u0151\uffd1" +
    "\001\002\000\004\u0151\uffcd\001\002\000\006\u014d\370\u0151" +
    "\uffca\001\002\000\004\u015a\372\001\002\000\004\u0151\uffcc" +
    "\001\002\000\004\u0151\uffcb\001\002\000\112\013\uffd6\016" +
    "\uffd6\017\uffd6\026\uffd6\054\uffd6\120\uffd6\134\uffd6\135\uffd6" +
    "\140\uffd6\165\uffd6\172\uffd6\206\uffd6\223\uffd6\224\uffd6\236" +
    "\uffd6\263\uffd6\303\uffd6\314\uffd6\353\uffd6\u010e\uffd6\u0131\uffd6" +
    "\u0133\uffd6\u013c\uffd6\u013d\uffd6\u013e\uffd6\u013f\uffd6\u0140\uffd6\u0141" +
    "\uffd6\u0142\uffd6\u0143\uffd6\u0144\uffd6\u0147\uffd6\u014b\uffd6\u014c\uffd6" +
    "\u0151\uffd6\u015a\uffd6\001\002\000\006\013\uff75\u0151\uff75\001" +
    "\002\000\006\u013e\u0100\u015a\013\001\002\000\004\u014c\u0101" +
    "\001\002\000\004\u014c\uff58\001\002\000\004\u014c\uff59\001" +
    "\002\000\010\243\107\263\110\u0150\111\001\002\000\004" +
    "\u0151\u0104\001\002\000\004\u0151\uff57\001\002\000\010\013" +
    "\uff72\303\uff72\u0151\uff72\001\002\000\112\013\uffd8\016\uffd8" +
    "\017\uffd8\026\uffd8\054\uffd8\120\uffd8\134\uffd8\135\uffd8\140" +
    "\uffd8\165\uffd8\172\uffd8\206\uffd8\223\uffd8\224\uffd8\236\uffd8" +
    "\263\uffd8\303\uffd8\314\uffd8\353\uffd8\u010e\uffd8\u0131\uffd8\u0133" +
    "\uffd8\u013c\uffd8\u013d\uffd8\u013e\uffd8\u013f\uffd8\u0140\uffd8\u0141\uffd8" +
    "\u0142\uffd8\u0143\uffd8\u0144\uffd8\u0147\uffd8\u014b\uffd8\u014c\uffd8\u0151" +
    "\uffd8\u015a\uffd8\001\002\000\010\u0157\242\u015a\241\u015b\240" +
    "\001\002\000\004\u014c\u0108\001\002\000\024\023\165\072" +
    "\176\156\171\220\134\244\201\246\150\u0108\174\u0150\225" +
    "\u0157\161\001\002\000\004\u0151\u010a\001\002\000\052\013" +
    "\uff49\016\uff49\017\uff49\026\uff49\054\uff49\120\uff49\140\uff49" +
    "\206\uff49\224\uff49\236\uff49\263\uff49\303\uff49\u0141\uff49\u0142" +
    "\uff49\u0143\uff49\u0144\uff49\u0147\uff49\u014c\uff49\u0151\uff49\u015a\uff49" +
    "\001\002\000\006\u0157\213\u015b\212\001\002\000\004\u0151" +
    "\u010d\001\002\000\052\013\uff3b\016\uff3b\017\uff3b\026\uff3b" +
    "\054\uff3b\120\uff3b\140\uff3b\206\uff3b\224\uff3b\236\uff3b\263" +
    "\uff3b\303\uff3b\u0141\uff3b\u0142\uff3b\u0143\uff3b\u0144\uff3b\u0147\uff3b" +
    "\u014c\uff3b\u0151\uff3b\u015a\uff3b\001\002\000\032\010\221\023" +
    "\uffbd\072\uffbd\126\220\156\uffbd\220\uffbd\244\uffbd\246\uffbd" +
    "\u0108\uffbd\u0150\uffbd\u0157\uffbd\u015a\uffbd\001\002\000\004\u0151" +
    "\u0110\001\002\000\112\013\uffd3\016\uffd3\017\uffd3\026\uffd3" +
    "\054\uffd3\120\uffd3\134\uffd3\135\uffd3\140\uffd3\165\uffd3\172" +
    "\uffd3\206\uffd3\223\uffd3\224\uffd3\236\uffd3\263\uffd3\303\uffd3" +
    "\314\uffd3\353\uffd3\u010e\uffd3\u0131\uffd3\u0133\uffd3\u013c\uffd3\u013d" +
    "\uffd3\u013e\uffd3\u013f\uffd3\u0140\uffd3\u0141\uffd3\u0142\uffd3\u0143\uffd3" +
    "\u0144\uffd3\u0147\uffd3\u014b\uffd3\u014c\uffd3\u0151\uffd3\u015a\uffd3\001" +
    "\002\000\010\u0157\242\u015a\241\u015b\240\001\002\000\004" +
    "\u014c\u0113\001\002\000\010\u0157\242\u015a\241\u015b\240\001" +
    "\002\000\004\u014c\u0115\001\002\000\010\u0157\242\u015a\241" +
    "\u015b\240\001\002\000\004\u0151\u0117\001\002\000\052\013" +
    "\uff4c\016\uff4c\017\uff4c\026\uff4c\054\uff4c\120\uff4c\140\uff4c" +
    "\206\uff4c\224\uff4c\236\uff4c\263\uff4c\303\uff4c\u0141\uff4c\u0142" +
    "\uff4c\u0143\uff4c\u0144\uff4c\u0147\uff4c\u014c\uff4c\u0151\uff4c\u015a\uff4c" +
    "\001\002\000\004\157\u0119\001\002\000\004\u015a\u011a\001" +
    "\002\000\006\307\u011d\u014d\u011f\001\002\000\040\013\uff25" +
    "\026\uff25\140\uff25\206\uff25\224\uff25\236\uff25\263\uff25\303" +
    "\uff25\u0141\uff25\u0142\uff25\u0143\uff25\u0144\uff25\u0147\uff25\u014c\uff25" +
    "\u0151\uff25\001\002\000\040\013\uff27\026\uff27\140\uff27\206" +
    "\uff27\224\uff27\236\uff27\263\uff27\303\uff27\u0141\uff27\u0142\uff27" +
    "\u0143\uff27\u0144\uff27\u0147\uff27\u014c\uff27\u0151\uff27\001\002\000" +
    "\004\304\u0126\001\002\000\040\013\uff2c\026\uff2c\140\uff2c" +
    "\206\uff2c\224\uff2c\236\uff2c\263\uff2c\303\uff2c\u0141\uff2c\u0142" +
    "\uff2c\u0143\uff2c\u0144\uff2c\u0147\uff2c\u014c\uff2c\u0151\uff2c\001\002" +
    "\000\004\u015a\u0120\001\002\000\006\307\u011d\u014d\u0123\001" +
    "\002\000\040\013\uff26\026\uff26\140\uff26\206\uff26\224\uff26" +
    "\236\uff26\263\uff26\303\uff26\u0141\uff26\u0142\uff26\u0143\uff26\u0144" +
    "\uff26\u0147\uff26\u014c\uff26\u0151\uff26\001\002\000\040\013\uff28" +
    "\026\uff28\140\uff28\206\uff28\224\uff28\236\uff28\263\uff28\303" +
    "\uff28\u0141\uff28\u0142\uff28\u0143\uff28\u0144\uff28\u0147\uff28\u014c\uff28" +
    "\u0151\uff28\001\002\000\004\u015a\u0124\001\002\000\004\307" +
    "\u011d\001\002\000\040\013\uff26\026\uff26\140\uff26\206\uff26" +
    "\224\uff26\236\uff26\263\uff26\303\uff26\u0141\uff26\u0142\uff26\u0143" +
    "\uff26\u0144\uff26\u0147\uff26\u014c\uff26\u0151\uff26\001\002\000\004" +
    "\035\u0127\001\002\000\112\016\uff13\017\uff13\023\165\040" +
    "\132\041\125\043\130\054\uff13\070\136\072\176\100\172" +
    "\105\202\120\uff13\156\171\220\134\234\154\242\133\244" +
    "\201\246\150\251\131\255\167\263\274\347\177\371\203" +
    "\377\124\u0107\126\u0108\174\u0118\147\u011b\144\u0126\200\u013a" +
    "\152\u013e\u012a\u014c\uff13\u0150\225\u0157\161\u015a\u012b\u015b\276" +
    "\001\002\000\042\016\u0133\017\ufef1\054\ufef1\120\ufef1\u013c" +
    "\uffd7\u013d\uffd7\u013e\uffd7\u013f\uffd7\u0140\uffd7\u0141\uffd7\u0142\uffd7" +
    "\u0143\uffd7\u0144\uffd7\u0147\uffd7\u014c\ufef1\u015a\u0134\001\002\000" +
    "\012\017\uff01\054\uff01\120\uff01\u014c\uff01\001\002\000\012" +
    "\017\uff00\054\uff00\120\uff00\u014c\uff00\001\002\000\020\017" +
    "\ufef6\054\ufef6\120\ufef6\u013c\uff0e\u0146\u0148\u014c\ufef6\u014d\u0147" +
    "\001\002\000\016\016\u0133\017\ufef1\054\ufef1\120\ufef1\u014c" +
    "\ufef1\u015a\u0134\001\002\000\016\016\u0133\017\ufef1\054\ufef1" +
    "\120\ufef1\u014c\ufef1\u015a\u0134\001\002\000\016\016\u0133\017" +
    "\ufef1\054\ufef1\120\ufef1\u014c\ufef1\u015a\u0134\001\002\000\012" +
    "\017\u013b\054\u0139\120\u013a\u014c\u013d\001\002\000\040\013" +
    "\uff24\026\uff24\140\uff24\206\uff24\224\uff24\236\uff24\263\uff24" +
    "\303\uff24\u0141\uff24\u0142\uff24\u0143\uff24\u0144\uff24\u0147\uff24\u014c" +
    "\uff24\u0151\uff24\001\002\000\016\016\u0133\017\ufef1\054\ufef1" +
    "\120\ufef1\u014c\ufef1\u015a\u0134\001\002\000\016\016\u0133\017" +
    "\ufef1\054\ufef1\120\ufef1\u014c\ufef1\u015a\u0134\001\002\000\004" +
    "\u015a\u0136\001\002\000\012\017\ufef2\054\ufef2\120\ufef2\u014c" +
    "\ufef2\001\002\000\012\017\ufef9\054\ufef9\120\ufef9\u014c\ufef9" +
    "\001\002\000\012\017\ufef3\054\ufef3\120\ufef3\u014c\ufef3\001" +
    "\002\000\012\017\ufefe\054\ufefe\120\ufefe\u014c\ufefe\001\002" +
    "\000\040\013\uff1e\026\uff1e\140\uff1e\206\uff1e\224\uff1e\236" +
    "\uff1e\263\uff1e\303\uff1e\u0141\uff1e\u0142\uff1e\u0143\uff1e\u0144\uff1e" +
    "\u0147\uff1e\u014c\uff1e\u0151\uff1e\001\002\000\004\u015a\u0140\001" +
    "\002\000\040\013\uff17\026\uff17\140\uff17\206\uff17\224\uff17" +
    "\236\uff17\263\uff17\303\uff17\u0141\uff17\u0142\uff17\u0143\uff17\u0144" +
    "\uff17\u0147\uff17\u014c\uff17\u0151\uff17\001\002\000\040\013\uff18" +
    "\026\uff18\140\uff18\206\uff18\224\uff18\236\uff18\263\uff18\303" +
    "\uff18\u0141\uff18\u0142\uff18\u0143\uff18\u0144\uff18\u0147\uff18\u014c\uff18" +
    "\u0151\uff18\001\002\000\040\013\uff1a\026\uff1a\140\uff1a\206" +
    "\uff1a\224\uff1a\236\uff1a\263\uff1a\303\uff1a\u0141\uff1a\u0142\uff1a" +
    "\u0143\uff1a\u0144\uff1a\u0147\uff1a\u014c\uff1a\u0151\uff1a\001\002\000" +
    "\112\016\uff13\017\uff13\023\165\040\132\041\125\043\130" +
    "\054\uff13\070\136\072\176\100\172\105\202\120\uff13\156" +
    "\171\220\134\234\154\242\133\244\201\246\150\251\131" +
    "\255\167\263\274\347\177\371\203\377\124\u0107\126\u0108" +
    "\174\u0118\147\u011b\144\u0126\200\u013a\152\u013e\u012a\u014c\uff13" +
    "\u0150\225\u0157\161\u015a\u012b\u015b\276\001\002\000\040\013" +
    "\uff1d\026\uff1d\140\uff1d\206\uff1d\224\uff1d\236\uff1d\263\uff1d" +
    "\303\uff1d\u0141\uff1d\u0142\uff1d\u0143\uff1d\u0144\uff1d\u0147\uff1d\u014c" +
    "\uff1d\u0151\uff1d\001\002\000\040\013\uff1c\026\uff1c\140\uff1c" +
    "\206\uff1c\224\uff1c\236\uff1c\263\uff1c\303\uff1c\u0141\uff1c\u0142" +
    "\uff1c\u0143\uff1c\u0144\uff1c\u0147\uff1c\u014c\uff1c\u0151\uff1c\001\002" +
    "\000\006\017\u013b\120\u013a\001\002\000\040\013\uff1b\026" +
    "\uff1b\140\uff1b\206\uff1b\224\uff1b\236\uff1b\263\uff1b\303\uff1b" +
    "\u0141\uff1b\u0142\uff1b\u0143\uff1b\u0144\uff1b\u0147\uff1b\u014c\uff1b\u0151" +
    "\uff1b\001\002\000\040\013\uff19\026\uff19\140\uff19\206\uff19" +
    "\224\uff19\236\uff19\263\uff19\303\uff19\u0141\uff19\u0142\uff19\u0143" +
    "\uff19\u0144\uff19\u0147\uff19\u014c\uff19\u0151\uff19\001\002\000\012" +
    "\017\ufefb\054\ufefb\120\ufefb\u014c\ufefb\001\002\000\012\017" +
    "\ufefa\054\ufefa\120\ufefa\u014c\ufefa\001\002\000\012\017\ufefc" +
    "\054\ufefc\120\ufefc\u014c\ufefc\001\002\000\012\017\ufeff\054" +
    "\ufeff\120\ufeff\u014c\ufeff\001\002\000\006\u013e\u014d\u015a\u014c" +
    "\001\002\000\042\017\uff13\023\165\054\uff13\072\176\120" +
    "\uff13\156\171\220\134\244\201\246\150\263\274\u0108\174" +
    "\u014c\uff13\u0150\225\u0157\161\u015a\300\u015b\276\001\002\000" +
    "\012\017\ufef7\054\ufef7\120\ufef7\u014c\ufef7\001\002\000\012" +
    "\017\ufef0\054\ufef0\120\ufef0\u014c\ufef0\001\002\000\012\017" +
    "\ufef8\054\ufef8\120\ufef8\u014c\ufef8\001\002\000\016\016\u0133" +
    "\017\ufef1\054\ufef1\120\ufef1\u014c\ufef1\u015a\u0134\001\002\000" +
    "\012\017\ufef5\054\ufef5\120\ufef5\u014c\ufef5\001\002\000\012" +
    "\017\ufef4\054\ufef4\120\ufef4\u014c\ufef4\001\002\000\012\017" +
    "\ufefd\054\ufefd\120\ufefd\u014c\ufefd\001\002\000\026\023\165" +
    "\072\176\156\171\220\134\244\201\246\150\263\110\u0108" +
    "\174\u0150\u0150\u0157\161\001\002\000\004\u0151\u0152\001\002" +
    "\000\010\013\uff78\303\123\u0151\uff78\001\002\000\006\013" +
    "\uff74\u0151\uff74\001\002\000\010\u0157\242\u015a\241\u015b\240" +
    "\001\002\000\006\165\u0156\u0151\uff3f\001\002\000\010\u0157" +
    "\242\u015a\241\u015b\240\001\002\000\004\u0151\u0158\001\002" +
    "\000\052\013\uff48\016\uff48\017\uff48\026\uff48\054\uff48\120" +
    "\uff48\140\uff48\206\uff48\224\uff48\236\uff48\263\uff48\303\uff48" +
    "\u0141\uff48\u0142\uff48\u0143\uff48\u0144\uff48\u0147\uff48\u014c\uff48\u0151" +
    "\uff48\u015a\uff48\001\002\000\004\u0151\uff40\001\002\000\102" +
    "\023\165\040\132\041\125\043\130\070\136\072\176\100" +
    "\172\105\202\156\171\220\134\234\154\242\133\244\201" +
    "\246\150\251\131\255\167\256\146\265\173\347\177\370" +
    "\155\371\203\377\124\u0107\126\u0108\174\u0109\153\u0118\147" +
    "\u011b\144\u0126\200\u013a\152\u0150\225\u0157\161\u015a\141\001" +
    "\002\000\102\023\165\040\132\041\125\043\130\070\136" +
    "\072\176\100\172\105\202\156\171\220\134\234\154\242" +
    "\133\244\201\246\150\251\131\255\167\256\146\265\173" +
    "\347\177\370\155\371\203\377\124\u0107\126\u0108\174\u0109" +
    "\153\u0118\147\u011b\144\u0126\200\u013a\152\u0150\225\u0157\161" +
    "\u015a\141\001\002\000\010\013\uff73\303\uff73\u0151\uff73\001" +
    "\002\000\102\023\165\040\132\041\125\043\130\070\136" +
    "\072\176\100\172\105\202\156\171\220\134\234\154\242" +
    "\133\244\201\246\150\251\131\255\167\256\146\265\173" +
    "\347\177\370\155\371\203\377\124\u0107\126\u0108\174\u0109" +
    "\153\u0118\147\u011b\144\u0126\200\u013a\152\u0150\225\u0157\161" +
    "\u015a\141\001\002\000\010\026\u016a\206\u0169\236\u0168\001" +
    "\002\000\102\023\165\040\132\041\125\043\130\070\136" +
    "\072\176\100\172\105\202\156\171\220\134\234\154\242" +
    "\133\244\201\246\150\251\131\255\167\256\146\265\173" +
    "\347\177\370\155\371\203\377\124\u0107\126\u0108\174\u0109" +
    "\153\u0118\147\u011b\144\u0126\200\u013a\152\u0150\225\u0157\161" +
    "\u015a\141\001\002\000\006\263\u0161\264\uff5e\001\002\000" +
    "\004\264\uff5f\001\002\000\004\264\u0163\001\002\000\010" +
    "\013\uff64\303\uff64\u0151\uff64\001\002\000\012\013\uff5a\140" +
    "\u0165\303\uff5a\u0151\uff5a\001\002\000\004\u015b\u0167\001\002" +
    "\000\010\013\uff66\303\uff66\u0151\uff66\001\002\000\010\013" +
    "\uff5b\303\uff5b\u0151\uff5b\001\002\000\102\023\165\040\132" +
    "\041\125\043\130\070\136\072\176\100\172\105\202\156" +
    "\171\220\134\234\154\242\133\244\201\246\150\251\131" +
    "\255\167\256\146\265\173\347\177\370\155\371\203\377" +
    "\124\u0107\126\u0108\174\u0109\153\u0118\147\u011b\144\u0126\200" +
    "\u013a\152\u0150\225\u0157\161\u015a\141\001\002\000\102\023" +
    "\165\040\132\041\125\043\130\070\136\072\176\100\172" +
    "\105\202\156\171\220\134\234\154\242\133\244\201\246" +
    "\150\251\131\255\167\256\146\265\173\347\177\370\155" +
    "\371\203\377\124\u0107\126\u0108\174\u0109\153\u0118\147\u011b" +
    "\144\u0126\200\u013a\152\u0150\225\u0157\161\u015a\141\001\002" +
    "\000\102\023\165\040\132\041\125\043\130\070\136\072" +
    "\176\100\172\105\202\156\171\220\134\234\154\242\133" +
    "\244\201\246\150\251\131\255\167\256\146\265\173\347" +
    "\177\370\155\371\203\377\124\u0107\126\u0108\174\u0109\153" +
    "\u0118\147\u011b\144\u0126\200\u013a\152\u0150\225\u0157\161\u015a" +
    "\141\001\002\000\010\013\uff67\303\uff67\u0151\uff67\001\002" +
    "\000\004\013\u016d\001\002\000\102\023\165\040\132\041" +
    "\125\043\130\070\136\072\176\100\172\105\202\156\171" +
    "\220\134\234\154\242\133\244\201\246\150\251\131\255" +
    "\167\256\146\265\173\347\177\370\155\371\203\377\124" +
    "\u0107\126\u0108\174\u0109\153\u0118\147\u011b\144\u0126\200\u013a" +
    "\152\u0150\225\u0157\161\u015a\141\001\002\000\010\013\uff61" +
    "\303\uff61\u0151\uff61\001\002\000\012\013\uff5c\303\uff5c\u014c" +
    "\u0171\u0151\uff5c\001\002\000\010\013\uff60\303\uff60\u0151\uff60" +
    "\001\002\000\102\023\165\040\132\041\125\043\130\070" +
    "\136\072\176\100\172\105\202\156\171\220\134\234\154" +
    "\242\133\244\201\246\150\251\131\255\167\256\146\265" +
    "\173\347\177\370\155\371\203\377\124\u0107\126\u0108\174" +
    "\u0109\153\u0118\147\u011b\144\u0126\200\u013a\152\u0150\225\u0157" +
    "\161\u015a\141\001\002\000\012\013\uff5c\303\uff5c\u014c\u0171" +
    "\u0151\uff5c\001\002\000\010\013\uff5d\303\uff5d\u0151\uff5d\001" +
    "\002\000\012\013\uff5a\140\u0165\303\uff5a\u0151\uff5a\001\002" +
    "\000\010\013\uff62\303\uff62\u0151\uff62\001\002\000\004\013" +
    "\u0177\001\002\000\102\023\165\040\132\041\125\043\130" +
    "\070\136\072\176\100\172\105\202\156\171\220\134\234" +
    "\154\242\133\244\201\246\150\251\131\255\167\256\146" +
    "\265\173\347\177\370\155\371\203\377\124\u0107\126\u0108" +
    "\174\u0109\153\u0118\147\u011b\144\u0126\200\u013a\152\u0150\225" +
    "\u0157\161\u015a\141\001\002\000\010\013\uff65\303\uff65\u0151" +
    "\uff65\001\002\000\010\013\uff68\303\uff68\u0151\uff68\001\002" +
    "\000\012\013\uff5c\303\uff5c\u014c\u0171\u0151\uff5c\001\002\000" +
    "\010\013\uff63\303\uff63\u0151\uff63\001\002\000\006\013\uff77" +
    "\u0151\uff77\001\002\000\006\u013e\u0100\u015a\013\001\002\000" +
    "\004\u014c\u017f\001\002\000\006\u0157\u0182\u015b\u0180\001\002" +
    "\000\004\u0151\uff56\001\002\000\004\u0151\u0184\001\002\000" +
    "\004\u015a\u0183\001\002\000\004\u0151\uff55\001\002\000\010" +
    "\013\uff71\303\uff71\u0151\uff71\001\002\000\036\027\u018f\043" +
    "\u0195\104\u018b\111\u0188\156\u0196\217\u0187\220\u0189\255\u018e" +
    "\266\u018d\335\u0192\375\u0191\u010f\u018c\u012d\u0190\u015a\u0194\001" +
    "\002\000\036\023\uff30\072\uff30\156\uff30\220\uff30\244\uff30" +
    "\246\uff30\263\uff30\u0108\uff30\u014c\uff30\u0150\u01af\u0151\uff30\u0157" +
    "\uff30\u015a\uff30\u015b\uff30\001\002\000\036\023\ufedb\072\ufedb" +
    "\156\ufedb\220\ufedb\244\ufedb\246\ufedb\263\ufedb\u0108\ufedb\u014c" +
    "\ufedb\u0150\u0197\u0151\ufedb\u0157\ufedb\u015a\ufedb\u015b\ufedb\001\002" +
    "\000\036\023\ufedb\072\ufedb\156\ufedb\220\ufedb\244\ufedb\246" +
    "\ufedb\263\ufedb\u0108\ufedb\u014c\ufedb\u0150\u0197\u0151\ufedb\u0157\ufedb" +
    "\u015a\ufedb\u015b\ufedb\001\002\000\036\023\ufedb\072\ufedb\156" +
    "\ufedb\220\ufedb\244\ufedb\246\ufedb\263\ufedb\u0108\ufedb\u014c\ufedb" +
    "\u0150\u0197\u0151\ufedb\u0157\ufedb\u015a\ufedb\u015b\ufedb\001\002\000" +
    "\036\023\ufeeb\072\ufeeb\156\ufeeb\220\ufeeb\244\ufeeb\246\ufeeb" +
    "\263\ufeeb\u0108\ufeeb\u014c\ufeeb\u0150\ufeeb\u0151\ufeeb\u0157\ufeeb\u015a" +
    "\ufeeb\u015b\ufeeb\001\002\000\036\023\ufedb\072\ufedb\156\ufedb" +
    "\220\ufedb\244\ufedb\246\ufedb\263\ufedb\u0108\ufedb\u014c\ufedb\u0150" +
    "\u0197\u0151\ufedb\u0157\ufedb\u015a\ufedb\u015b\ufedb\001\002\000\036" +
    "\023\ufedb\072\ufedb\156\ufedb\220\ufedb\244\ufedb\246\ufedb\263" +
    "\ufedb\u0108\ufedb\u014c\ufedb\u0150\u0197\u0151\ufedb\u0157\ufedb\u015a\ufedb" +
    "\u015b\ufedb\001\002\000\036\023\ufedb\072\ufedb\156\ufedb\220" +
    "\ufedb\244\ufedb\246\ufedb\263\ufedb\u0108\ufedb\u014c\ufedb\u0150\u0197" +
    "\u0151\ufedb\u0157\ufedb\u015a\ufedb\u015b\ufedb\001\002\000\036\023" +
    "\ufedb\072\ufedb\156\ufedb\220\ufedb\244\ufedb\246\ufedb\263\ufedb" +
    "\u0108\ufedb\u014c\ufedb\u0150\u0197\u0151\ufedb\u0157\ufedb\u015a\ufedb\u015b" +
    "\ufedb\001\002\000\036\023\ufedb\072\ufedb\156\ufedb\220\ufedb" +
    "\244\ufedb\246\ufedb\263\ufedb\u0108\ufedb\u014c\ufedb\u0150\u0197\u0151" +
    "\ufedb\u0157\ufedb\u015a\ufedb\u015b\ufedb\001\002\000\036\023\ufedb" +
    "\072\ufedb\156\ufedb\220\ufedb\244\ufedb\246\ufedb\263\ufedb\u0108" +
    "\ufedb\u014c\ufedb\u0150\u0197\u0151\ufedb\u0157\ufedb\u015a\ufedb\u015b\ufedb" +
    "\001\002\000\036\023\ufedb\072\ufedb\156\ufedb\220\ufedb\244" +
    "\ufedb\246\ufedb\263\ufedb\u0108\ufedb\u014c\ufedb\u0150\u0197\u0151\ufedb" +
    "\u0157\ufedb\u015a\ufedb\u015b\ufedb\001\002\000\036\023\ufedb\072" +
    "\ufedb\156\ufedb\220\ufedb\244\ufedb\246\ufedb\263\ufedb\u0108\ufedb" +
    "\u014c\ufedb\u0150\u0197\u0151\ufedb\u0157\ufedb\u015a\ufedb\u015b\ufedb\001" +
    "\002\000\052\013\uff34\016\uff34\017\uff34\026\uff34\054\uff34" +
    "\120\uff34\140\uff34\206\uff34\224\uff34\236\uff34\263\uff34\303" +
    "\uff34\u0141\uff34\u0142\uff34\u0143\uff34\u0144\uff34\u0147\uff34\u014c\uff34" +
    "\u0151\uff34\u015a\uff34\001\002\000\004\u014d\u01a0\001\002\000" +
    "\036\023\ufedb\072\ufedb\156\ufedb\220\ufedb\244\ufedb\246\ufedb" +
    "\263\ufedb\u0108\ufedb\u014c\ufedb\u0150\u0197\u0151\ufedb\u0157\ufedb\u015a" +
    "\ufedb\u015b\ufedb\001\002\000\036\023\ufedb\072\ufedb\156\ufedb" +
    "\220\ufedb\244\ufedb\246\ufedb\263\ufedb\u0108\ufedb\u014c\ufedb\u0150" +
    "\u0197\u0151\ufedb\u0157\ufedb\u015a\ufedb\u015b\ufedb\001\002\000\004" +
    "\u015c\u0199\001\002\000\036\023\ufee6\072\ufee6\156\ufee6\220" +
    "\ufee6\244\ufee6\246\ufee6\263\ufee6\u0108\ufee6\u014c\ufee6\u0150\ufee6" +
    "\u0151\ufee6\u0157\ufee6\u015a\ufee6\u015b\ufee6\001\002\000\006\u014c" +
    "\u019c\u0151\u019a\001\002\000\036\023\ufed9\072\ufed9\156\ufed9" +
    "\220\ufed9\244\ufed9\246\ufed9\263\ufed9\u0108\ufed9\u014c\ufed9\u0150" +
    "\ufed9\u0151\ufed9\u0157\ufed9\u015a\ufed9\u015b\ufed9\001\002\000\036" +
    "\023\ufedc\072\ufedc\156\ufedc\220\ufedc\244\ufedc\246\ufedc\263" +
    "\ufedc\u0108\ufedc\u014c\ufedc\u0150\ufedc\u0151\ufedc\u0157\ufedc\u015a\ufedc" +
    "\u015b\ufedc\001\002\000\004\u015c\u019d\001\002\000\004\u0151" +
    "\u019e\001\002\000\036\023\ufeda\072\ufeda\156\ufeda\220\ufeda" +
    "\244\ufeda\246\ufeda\263\ufeda\u0108\ufeda\u014c\ufeda\u0150\ufeda\u0151" +
    "\ufeda\u0157\ufeda\u015a\ufeda\u015b\ufeda\001\002\000\036\023\ufede" +
    "\072\ufede\156\ufede\220\ufede\244\ufede\246\ufede\263\ufede\u0108" +
    "\ufede\u014c\ufede\u0150\ufede\u0151\ufede\u0157\ufede\u015a\ufede\u015b\ufede" +
    "\001\002\000\004\u015a\u01a2\001\002\000\036\023\ufeec\072" +
    "\ufeec\156\ufeec\220\ufeec\244\ufeec\246\ufeec\263\ufeec\u0108\ufeec" +
    "\u014c\ufeec\u0150\ufeec\u0151\ufeec\u0157\ufeec\u015a\ufeec\u015b\ufeec\001" +
    "\002\000\036\023\ufeea\072\ufeea\156\ufeea\220\ufeea\244\ufeea" +
    "\246\ufeea\263\ufeea\u0108\ufeea\u014c\ufeea\u0150\ufeea\u0151\ufeea\u0157" +
    "\ufeea\u015a\ufeea\u015b\ufeea\001\002\000\036\023\ufee3\072\ufee3" +
    "\156\ufee3\220\ufee3\244\ufee3\246\ufee3\263\ufee3\u0108\ufee3\u014c" +
    "\ufee3\u0150\ufee3\u0151\ufee3\u0157\ufee3\u015a\ufee3\u015b\ufee3\001\002" +
    "\000\036\023\ufee0\072\ufee0\156\ufee0\220\ufee0\244\ufee0\246" +
    "\ufee0\263\ufee0\u0108\ufee0\u014c\ufee0\u0150\ufee0\u0151\ufee0\u0157\ufee0" +
    "\u015a\ufee0\u015b\ufee0\001\002\000\036\023\ufee5\072\ufee5\156" +
    "\ufee5\220\ufee5\244\ufee5\246\ufee5\263\ufee5\u0108\ufee5\u014c\ufee5" +
    "\u0150\ufee5\u0151\ufee5\u0157\ufee5\u015a\ufee5\u015b\ufee5\001\002\000" +
    "\036\023\ufee9\072\ufee9\156\ufee9\220\ufee9\244\ufee9\246\ufee9" +
    "\263\ufee9\u0108\ufee9\u014c\ufee9\u0150\ufee9\u0151\ufee9\u0157\ufee9\u015a" +
    "\ufee9\u015b\ufee9\001\002\000\036\023\ufedd\072\ufedd\156\ufedd" +
    "\220\ufedd\244\ufedd\246\ufedd\263\ufedd\u0108\ufedd\u014c\ufedd\u0150" +
    "\ufedd\u0151\ufedd\u0157\ufedd\u015a\ufedd\u015b\ufedd\001\002\000\036" +
    "\023\ufee1\072\ufee1\156\ufee1\220\ufee1\244\ufee1\246\ufee1\263" +
    "\ufee1\u0108\ufee1\u014c\ufee1\u0150\ufee1\u0151\ufee1\u0157\ufee1\u015a\ufee1" +
    "\u015b\ufee1\001\002\000\036\023\ufedf\072\ufedf\156\ufedf\220" +
    "\ufedf\244\ufedf\246\ufedf\263\ufedf\u0108\ufedf\u014c\ufedf\u0150\ufedf" +
    "\u0151\ufedf\u0157\ufedf\u015a\ufedf\u015b\ufedf\001\002\000\036\023" +
    "\ufee4\072\ufee4\156\ufee4\220\ufee4\244\ufee4\246\ufee4\263\ufee4" +
    "\u0108\ufee4\u014c\ufee4\u0150\ufee4\u0151\ufee4\u0157\ufee4\u015a\ufee4\u015b" +
    "\ufee4\001\002\000\036\023\ufee7\072\ufee7\156\ufee7\220\ufee7" +
    "\244\ufee7\246\ufee7\263\ufee7\u0108\ufee7\u014c\ufee7\u0150\ufee7\u0151" +
    "\ufee7\u0157\ufee7\u015a\ufee7\u015b\ufee7\001\002\000\036\023\ufee2" +
    "\072\ufee2\156\ufee2\220\ufee2\244\ufee2\246\ufee2\263\ufee2\u0108" +
    "\ufee2\u014c\ufee2\u0150\ufee2\u0151\ufee2\u0157\ufee2\u015a\ufee2\u015b\ufee2" +
    "\001\002\000\036\023\ufee8\072\ufee8\156\ufee8\220\ufee8\244" +
    "\ufee8\246\ufee8\263\ufee8\u0108\ufee8\u014c\ufee8\u0150\ufee8\u0151\ufee8" +
    "\u0157\ufee8\u015a\ufee8\u015b\ufee8\001\002\000\036\023\165\072" +
    "\176\156\171\220\134\244\201\246\150\263\274\u0108\174" +
    "\u014c\uff13\u0150\225\u0151\uff13\u0157\161\u015a\300\u015b\276\001" +
    "\002\000\004\220\u01b0\001\002\000\004\u0151\u01b1\001\002" +
    "\000\036\023\uff31\072\uff31\156\uff31\220\uff31\244\uff31\246" +
    "\uff31\263\uff31\u0108\uff31\u014c\uff31\u0150\uff31\u0151\uff31\u0157\uff31" +
    "\u015a\uff31\u015b\uff31\001\002\000\052\013\uff32\016\uff32\017" +
    "\uff32\026\uff32\054\uff32\120\uff32\140\uff32\206\uff32\224\uff32" +
    "\236\uff32\263\uff32\303\uff32\u0141\uff32\u0142\uff32\u0143\uff32\u0144" +
    "\uff32\u0147\uff32\u014c\uff32\u0151\uff32\u015a\uff32\001\002\000\006" +
    "\u014c\u01b6\u0151\u01b4\001\002\000\052\013\uff2d\016\uff2d\017" +
    "\uff2d\026\uff2d\054\uff2d\120\uff2d\140\uff2d\206\uff2d\224\uff2d" +
    "\236\uff2d\263\uff2d\303\uff2d\u0141\uff2d\u0142\uff2d\u0143\uff2d\u0144" +
    "\uff2d\u0147\uff2d\u014c\uff2d\u0151\uff2d\u015a\uff2d\001\002\000\052" +
    "\013\uff2f\016\uff2f\017\uff2f\026\uff2f\054\uff2f\120\uff2f\140" +
    "\uff2f\206\uff2f\224\uff2f\236\uff2f\263\uff2f\303\uff2f\u0141\uff2f" +
    "\u0142\uff2f\u0143\uff2f\u0144\uff2f\u0147\uff2f\u014c\uff2f\u0151\uff2f\u015a" +
    "\uff2f\001\002\000\024\023\165\072\176\156\171\220\134" +
    "\244\201\246\150\u0108\174\u0150\225\u0157\161\001\002\000" +
    "\052\013\uff2e\016\uff2e\017\uff2e\026\uff2e\054\uff2e\120\uff2e" +
    "\140\uff2e\206\uff2e\224\uff2e\236\uff2e\263\uff2e\303\uff2e\u0141" +
    "\uff2e\u0142\uff2e\u0143\uff2e\u0144\uff2e\u0147\uff2e\u014c\uff2e\u0151\uff2e" +
    "\u015a\uff2e\001\002\000\010\u0157\242\u015a\241\u015b\240\001" +
    "\002\000\004\u0151\u01ba\001\002\000\052\013\uff4d\016\uff4d" +
    "\017\uff4d\026\uff4d\054\uff4d\120\uff4d\140\uff4d\206\uff4d\224" +
    "\uff4d\236\uff4d\263\uff4d\303\uff4d\u0141\uff4d\u0142\uff4d\u0143\uff4d" +
    "\u0144\uff4d\u0147\uff4d\u014c\uff4d\u0151\uff4d\u015a\uff4d\001\002\000" +
    "\034\023\165\072\176\156\171\220\134\244\201\246\150" +
    "\263\274\u0108\174\u010e\uff13\u0150\225\u0157\161\u015a\300\u015b" +
    "\276\001\002\000\052\013\uff52\016\uff52\017\uff52\026\uff52" +
    "\054\uff52\120\uff52\140\uff52\206\uff52\224\uff52\236\uff52\263" +
    "\uff52\303\uff52\u0141\uff52\u0142\uff52\u0143\uff52\u0144\uff52\u0147\uff52" +
    "\u014c\uff52\u0151\uff52\u015a\uff52\001\002\000\052\013\uff54\016" +
    "\uff54\017\uff54\026\uff54\054\uff54\120\uff54\140\uff54\206\uff54" +
    "\224\uff54\236\uff54\263\uff54\303\uff54\u0141\uff54\u0142\uff54\u0143" +
    "\uff54\u0144\uff54\u0147\uff54\u014c\uff54\u0151\uff54\u015a\uff54\001\002" +
    "\000\004\u0131\u01bb\001\002\000\052\013\uff53\016\uff53\017" +
    "\uff53\026\uff53\054\uff53\120\uff53\140\uff53\206\uff53\224\uff53" +
    "\236\uff53\263\uff53\303\uff53\u0141\uff53\u0142\uff53\u0143\uff53\u0144" +
    "\uff53\u0147\uff53\u014c\uff53\u0151\uff53\u015a\uff53\001\002\000\004" +
    "\u010e\u01c1\001\002\000\040\023\165\072\176\134\uff13\135" +
    "\uff13\156\171\220\134\244\201\246\150\263\274\u0108\174" +
    "\u0131\uff13\u0150\225\u0157\161\u015a\300\u015b\276\001\002\000" +
    "\010\134\u01c4\135\u01c6\u0131\u01bb\001\002\000\052\013\uff51" +
    "\016\uff51\017\uff51\026\uff51\054\uff51\120\uff51\140\uff51\206" +
    "\uff51\224\uff51\236\uff51\263\uff51\303\uff51\u0141\uff51\u0142\uff51" +
    "\u0143\uff51\u0144\uff51\u0147\uff51\u014c\uff51\u0151\uff51\u015a\uff51\001" +
    "\002\000\034\023\165\072\176\135\uff13\156\171\220\134" +
    "\244\201\246\150\263\274\u0108\174\u0150\225\u0157\161\u015a" +
    "\300\u015b\276\001\002\000\052\013\uff4f\016\uff4f\017\uff4f" +
    "\026\uff4f\054\uff4f\120\uff4f\140\uff4f\206\uff4f\224\uff4f\236" +
    "\uff4f\263\uff4f\303\uff4f\u0141\uff4f\u0142\uff4f\u0143\uff4f\u0144\uff4f" +
    "\u0147\uff4f\u014c\uff4f\u0151\uff4f\u015a\uff4f\001\002\000\052\013" +
    "\uff4e\016\uff4e\017\uff4e\026\uff4e\054\uff4e\120\uff4e\140\uff4e" +
    "\206\uff4e\224\uff4e\236\uff4e\263\uff4e\303\uff4e\u0141\uff4e\u0142" +
    "\uff4e\u0143\uff4e\u0144\uff4e\u0147\uff4e\u014c\uff4e\u0151\uff4e\u015a\uff4e" +
    "\001\002\000\004\135\u01c8\001\002\000\052\013\uff50\016" +
    "\uff50\017\uff50\026\uff50\054\uff50\120\uff50\140\uff50\206\uff50" +
    "\224\uff50\236\uff50\263\uff50\303\uff50\u0141\uff50\u0142\uff50\u0143" +
    "\uff50\u0144\uff50\u0147\uff50\u014c\uff50\u0151\uff50\u015a\uff50\001\002" +
    "\000\006\u0157\213\u015b\212\001\002\000\004\u0151\u01cb\001" +
    "\002\000\052\013\uff3c\016\uff3c\017\uff3c\026\uff3c\054\uff3c" +
    "\120\uff3c\140\uff3c\206\uff3c\224\uff3c\236\uff3c\263\uff3c\303" +
    "\uff3c\u0141\uff3c\u0142\uff3c\u0143\uff3c\u0144\uff3c\u0147\uff3c\u014c\uff3c" +
    "\u0151\uff3c\u015a\uff3c\001\002\000\024\023\165\072\176\156" +
    "\171\220\134\244\201\246\150\u0108\174\u0150\225\u0157\161" +
    "\001\002\000\004\u0151\u01ce\001\002\000\052\013\uff4a\016" +
    "\uff4a\017\uff4a\026\uff4a\054\uff4a\120\uff4a\140\uff4a\206\uff4a" +
    "\224\uff4a\236\uff4a\263\uff4a\303\uff4a\u0141\uff4a\u0142\uff4a\u0143" +
    "\uff4a\u0144\uff4a\u0147\uff4a\u014c\uff4a\u0151\uff4a\u015a\uff4a\001\002" +
    "\000\010\u0157\242\u015a\241\u015b\240\001\002\000\004\u014c" +
    "\u01d1\001\002\000\024\023\165\072\176\156\171\220\134" +
    "\244\201\246\150\u0108\174\u0150\225\u0157\161\001\002\000" +
    "\004\u014c\u01d3\001\002\000\024\023\165\072\176\156\171" +
    "\220\134\244\201\246\150\u0108\174\u0150\225\u0157\161\001" +
    "\002\000\004\u0151\u01d5\001\002\000\052\013\uff44\016\uff44" +
    "\017\uff44\026\uff44\054\uff44\120\uff44\140\uff44\206\uff44\224" +
    "\uff44\236\uff44\263\uff44\303\uff44\u0141\uff44\u0142\uff44\u0143\uff44" +
    "\u0144\uff44\u0147\uff44\u014c\uff44\u0151\uff44\u015a\uff44\001\002\000" +
    "\034\016\uff13\023\165\072\176\156\171\220\134\244\201" +
    "\246\150\263\274\u0108\174\u0150\225\u0157\161\u015a\300\u015b" +
    "\276\001\002\000\052\013\uff35\016\uff35\017\uff35\026\uff35" +
    "\054\uff35\120\uff35\140\uff35\206\uff35\224\uff35\236\uff35\263" +
    "\uff35\303\uff35\u0141\uff35\u0142\uff35\u0143\uff35\u0144\uff35\u0147\uff35" +
    "\u014c\uff35\u0151\uff35\u015a\uff35\001\002\000\004\016\u01d9\001" +
    "\002\000\036\027\u018f\043\u0195\104\u018b\111\u0188\156\u0196" +
    "\217\u0187\220\u0189\255\u018e\266\u018d\335\u0192\375\u0191\u010f" +
    "\u018c\u012d\u0190\u015a\u0194\001\002\000\006\u0150\u01af\u0151\uff30" +
    "\001\002\000\004\u0151\u01dc\001\002\000\052\013\uff33\016" +
    "\uff33\017\uff33\026\uff33\054\uff33\120\uff33\140\uff33\206\uff33" +
    "\224\uff33\236\uff33\263\uff33\303\uff33\u0141\uff33\u0142\uff33\u0143" +
    "\uff33\u0144\uff33\u0147\uff33\u014c\uff33\u0151\uff33\u015a\uff33\001\002" +
    "\000\024\023\165\072\176\156\171\220\134\244\201\246" +
    "\150\u0108\174\u0150\225\u0157\161\001\002\000\004\u0151\u01df" +
    "\001\002\000\052\013\uff45\016\uff45\017\uff45\026\uff45\054" +
    "\uff45\120\uff45\140\uff45\206\uff45\224\uff45\236\uff45\263\uff45" +
    "\303\uff45\u0141\uff45\u0142\uff45\u0143\uff45\u0144\uff45\u0147\uff45\u014c" +
    "\uff45\u0151\uff45\u015a\uff45\001\002\000\010\013\uff78\303\123" +
    "\u0151\uff78\001\002\000\006\013\uff7b\u0151\uff7b\001\002\000" +
    "\004\u015a\u01e3\001\002\000\006\u013d\u01e7\u0141\u01e6\001\002" +
    "\000\004\u0151\u01e5\001\002\000\004\013\uff7e\001\002\000" +
    "\004\u013d\u01ef\001\002\000\004\u0150\u01ea\001\002\000\004" +
    "\u015a\u01e9\001\002\000\004\u0151\ufeef\001\002\000\004\u015a" +
    "\u01eb\001\002\000\004\u0151\u01ec\001\002\000\004\u013d\u01ed" +
    "\001\002\000\004\u0143\u01ee\001\002\000\004\u015a\ufeed\001" +
    "\002\000\004\u0150\u01f0\001\002\000\004\u015a\u01f1\001\002" +
    "\000\004\u0151\u01f2\001\002\000\004\u013d\u01f3\001\002\000" +
    "\004\u015a\ufeee\001\002\000\012\172\uffa0\u0133\uffa0\u014b\uffa0" +
    "\u014c\uffa0\001\002\000\004\226\uff85\001\002\000\004\u015b" +
    "\u01f7\001\002\000\004\u014c\u01f8\001\002\000\004\u015b\u01f9" +
    "\001\002\000\004\u0151\u01fa\001\002\000\034\016\uff90\074" +
    "\uff90\166\uff90\172\uff90\213\uff90\226\uff90\234\uff90\273\uff90" +
    "\347\uff90\u0133\uff90\u014b\uff90\u014c\uff90\u015a\uff90\001\002\000" +
    "\034\016\054\074\uff93\166\uff93\172\uff93\213\uff93\226\uff93" +
    "\234\uff93\273\uff93\347\uff93\u0133\uff93\u014b\uff93\u014c\uff93\u015a" +
    "\055\001\002\000\030\074\uff96\166\uff96\172\uff96\213\uff96" +
    "\226\uff96\234\uff96\273\uff96\347\uff96\u0133\uff96\u014b\uff96\u014c" +
    "\uff96\001\002\000\032\074\uff91\166\uff91\172\uff91\213\uff91" +
    "\226\uff91\234\uff91\273\uff91\347\uff91\u010b\u01ff\u0133\uff91\u014b" +
    "\uff91\u014c\uff91\001\002\000\030\074\uff92\166\uff92\172\uff92" +
    "\213\uff92\226\uff92\234\uff92\273\uff92\347\uff92\u0133\uff92\u014b" +
    "\uff92\u014c\uff92\001\002\000\004\u0150\u0201\001\002\000\030" +
    "\074\uff98\166\uff98\172\uff98\213\uff98\226\uff98\234\uff98\273" +
    "\uff98\347\uff98\u0133\uff98\u014b\uff98\u014c\uff98\001\002\000\024" +
    "\023\165\072\176\156\171\220\134\244\201\246\150\u0108" +
    "\174\u0150\225\u0157\161\001\002\000\004\u0151\u0207\001\002" +
    "\000\010\314\u0206\353\u0204\u0151\uff8a\001\002\000\004\u0151" +
    "\uff8b\001\002\000\004\u0151\uff8d\001\002\000\004\u0151\uff8c" +
    "\001\002\000\030\074\uff8e\166\uff8e\172\uff8e\213\uff8e\226" +
    "\uff8e\234\uff8e\273\uff8e\347\uff8e\u0133\uff8e\u014b\uff8e\u014c\uff8e" +
    "\001\002\000\006\002\uffef\116\uffef\001\002\000\006\002" +
    "\ufff2\116\ufff2\001\002\000\014\276\037\277\043\u0150\042" +
    "\u0157\036\u015a\013\001\002\000\012\172\033\u0133\023\u014b" +
    "\030\u014c\u020a\001\002\000\006\002\ufff0\116\ufff0\001\002" +
    "\000\006\002\ufff4\116\ufff4\001\002\000\016\016\uffab\165" +
    "\uffab\172\uffab\223\uffab\u0133\uffab\u014b\uffab\001\002\000\016" +
    "\016\u0227\165\uffa8\172\uffa8\223\uffa8\u0133\uffa8\u014b\uffa8\001" +
    "\002\000\014\165\uffb5\172\uffb5\223\u0218\u0133\uffb5\u014b\uffb5" +
    "\001\002\000\016\016\uffaa\165\uffaa\172\uffaa\223\uffaa\u0133" +
    "\uffaa\u014b\uffaa\001\002\000\004\u014d\u0213\001\002\000\006" +
    "\u013e\u0216\u015a\u0215\001\002\000\016\016\uffa5\165\uffa5\172" +
    "\uffa5\223\uffa5\u0133\uffa5\u014b\uffa5\001\002\000\016\016\uffa3" +
    "\165\uffa3\172\uffa3\223\uffa3\u0133\uffa3\u014b\uffa3\001\002\000" +
    "\016\016\uffa4\165\uffa4\172\uffa4\223\uffa4\u0133\uffa4\u014b\uffa4" +
    "\001\002\000\012\165\uffb8\172\uffb8\u0133\uffb8\u014b\uffb8\001" +
    "\002\000\006\u0157\u021b\u015a\u021a\001\002\000\012\165\uffb6" +
    "\172\uffb6\u0133\uffb6\u014b\uffb6\001\002\000\014\165\uffb1\172" +
    "\uffb1\u0133\uffb1\u014b\uffb1\u0150\u021f\001\002\000\004\u015a\u021c" +
    "\001\002\000\014\165\uffb1\172\uffb1\u0133\uffb1\u014b\uffb1\u0150" +
    "\u021f\001\002\000\012\165\uffb4\172\uffb4\u0133\uffb4\u014b\uffb4" +
    "\001\002\000\012\165\uffb2\172\uffb2\u0133\uffb2\u014b\uffb2\001" +
    "\002\000\004\u015a\u0220\001\002\000\006\u014c\u0224\u0151\u0222" +
    "\001\002\000\012\165\uffb0\172\uffb0\u0133\uffb0\u014b\uffb0\001" +
    "\002\000\012\165\uffad\172\uffad\u0133\uffad\u014b\uffad\001\002" +
    "\000\012\165\uffaf\172\uffaf\u0133\uffaf\u014b\uffaf\001\002\000" +
    "\004\u015a\u0220\001\002\000\012\165\uffae\172\uffae\u0133\uffae" +
    "\u014b\uffae\001\002\000\012\165\uffb3\172\uffb3\u0133\uffb3\u014b" +
    "\uffb3\001\002\000\004\u015a\u0229\001\002\000\014\165\uffac" +
    "\172\uffac\223\uffac\u0133\uffac\u014b\uffac\001\002\000\016\165" +
    "\uffa6\172\uffa6\223\uffa6\u0133\uffa6\u014b\uffa6\u014c\u022b\001\002" +
    "\000\014\165\uffa9\172\uffa9\223\uffa9\u0133\uffa9\u014b\uffa9\001" +
    "\002\000\026\023\165\072\176\156\171\220\134\244\201" +
    "\246\150\u0108\174\u0150\225\u0157\161\u015a\u0212\001\002\000" +
    "\014\165\uffa7\172\uffa7\223\uffa7\u0133\uffa7\u014b\uffa7\001\002" +
    "\000\006\172\033\u014b\030\001\002\000\006\002\uffee\116" +
    "\uffee\001\002\000\024\023\165\072\176\156\171\220\134" +
    "\244\201\246\150\u0108\174\u0150\225\u0157\161\001\002\000" +
    "\004\u0151\u0231\001\002\000\012\165\012\314\u0232\u0157\017" +
    "\u015a\013\001\002\000\010\165\012\u0157\017\u015a\013\001" +
    "\002\000\006\002\ufff9\116\ufff9\001\002\000\006\002\ufffc" +
    "\116\ufffc\001\002\000\006\002\ufffa\116\ufffa\001\002\000" +
    "\042\016\uffea\074\uffea\165\uffea\166\uffea\172\uffea\213\uffea" +
    "\226\uffea\234\uffea\273\uffea\306\uffea\347\uffea\u010b\uffea\u0133" +
    "\uffea\u014b\uffea\u014c\uffea\u015a\uffea\001\002\000\004\u015a\u0238" +
    "\001\002\000\044\016\uffe6\074\uffe6\165\uffe6\166\uffe6\172" +
    "\uffe6\213\uffe6\226\uffe6\234\uffe6\273\uffe6\306\uffe6\347\uffe6" +
    "\u010b\uffe6\u0133\uffe6\u014b\uffe6\u014c\uffe6\u014d\u023a\u015a\uffe6\001" +
    "\002\000\042\016\uffe9\074\uffe9\165\uffe9\166\uffe9\172\uffe9" +
    "\213\uffe9\226\uffe9\234\uffe9\273\uffe9\306\uffe9\347\uffe9\u010b" +
    "\uffe9\u0133\uffe9\u014b\uffe9\u014c\uffe9\u015a\uffe9\001\002\000\004" +
    "\u015a\u023b\001\002\000\044\016\uffe4\074\uffe4\165\uffe4\166" +
    "\uffe4\172\uffe4\213\uffe4\226\uffe4\234\uffe4\273\uffe4\306\uffe4" +
    "\347\uffe4\u010b\uffe4\u0133\uffe4\u014b\uffe4\u014c\uffe4\u014d\u023d\u015a" +
    "\uffe4\001\002\000\042\016\uffe7\074\uffe7\165\uffe7\166\uffe7" +
    "\172\uffe7\213\uffe7\226\uffe7\234\uffe7\273\uffe7\306\uffe7\347" +
    "\uffe7\u010b\uffe7\u0133\uffe7\u014b\uffe7\u014c\uffe7\u015a\uffe7\001\002" +
    "\000\004\u015a\u023e\001\002\000\042\016\uffe5\074\uffe5\165" +
    "\uffe5\166\uffe5\172\uffe5\213\uffe5\226\uffe5\234\uffe5\273\uffe5" +
    "\306\uffe5\347\uffe5\u010b\uffe5\u0133\uffe5\u014b\uffe5\u014c\uffe5\u015a" +
    "\uffe5\001\002\000\006\002\ufff8\116\ufff8\001\002\000\006" +
    "\002\ufff6\116\ufff6\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u023e\000\004\002\003\001\001\000\006\003\007\004" +
    "\006\001\001\000\012\005\017\007\015\010\013\033\010" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\011\u023f\012\025\014\023\015\021\024\030" +
    "\001\001\000\006\010\u023e\033\010\001\001\000\004\034" +
    "\u0235\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\011" +
    "\026\012\025\014\023\015\021\024\030\001\001\000\002" +
    "\001\001\000\016\016\276\021\167\023\165\037\223\155" +
    "\u022c\157\274\001\001\000\002\001\001\000\020\016\u0210" +
    "\021\167\023\165\037\223\054\u020f\055\u020e\060\u020d\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\012\u020c\014\023\015\021\001\001\000\012\033" +
    "\034\062\033\067\037\072\040\001\001\000\002\001\001" +
    "\000\010\013\u0208\014\u0207\015\021\001\001\000\004\070" +
    "\u01fc\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\063\062\076\057\077\066\100\065\001\001\000\004\070" +
    "\052\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\101\u01f4\001\001\000\012\033\034" +
    "\065\u01f3\067\103\072\040\001\001\000\002\001\001\000" +
    "\004\101\072\001\001\000\002\001\001\000\004\101\071" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\064\076\066\075\076\074\077" +
    "\066\100\065\001\001\000\012\033\034\065\102\067\103" +
    "\072\040\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\064\076\066\101\076\074\077\066" +
    "\100\065\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\102\112\103\111\105\105\001\001" +
    "\000\002\001\001\000\002\001\001\000\030\016\126\021" +
    "\167\023\165\037\134\111\u01df\112\142\123\174\127\150" +
    "\132\161\135\155\143\136\001\001\000\004\105\117\001" +
    "\001\000\004\104\115\001\001\000\014\064\076\066\113" +
    "\076\074\077\066\100\065\001\001\000\002\001\001\000" +
    "\010\102\116\103\111\105\105\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\106\121\001" +
    "\001\000\002\001\001\000\034\016\126\021\167\023\165" +
    "\037\134\107\157\110\156\111\163\112\142\123\174\127" +
    "\150\132\161\135\155\143\136\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\016\276\021\167" +
    "\023\165\037\223\124\u01bc\125\u01bb\155\u01bd\157\274\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\032\016\126\021\167\023\165\037\134" +
    "\110\u017b\111\163\112\142\123\174\127\150\132\161\135" +
    "\155\143\136\001\001\000\006\113\u015b\147\u015a\001\001" +
    "\000\002\001\001\000\014\016\233\021\167\023\165\037" +
    "\223\105\u0150\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\106\373" +
    "\001\001\000\002\001\001\000\004\022\351\001\001\000" +
    "\002\001\001\000\004\020\340\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\134\205\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\133" +
    "\213\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\050" +
    "\221\051\222\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\016\225\021\167\023\165\037" +
    "\223\052\227\001\001\000\002\001\001\000\012\016\233" +
    "\021\167\023\165\037\223\001\001\000\002\001\001\000" +
    "\004\053\230\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\130\242\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\130\246\001\001\000\002\001\001\000\012\016\250\021" +
    "\167\023\165\037\223\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\044\255\045\256\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\016\261" +
    "\021\167\023\165\037\223\046\260\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\047\264" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\050\270\051\222\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\016\276\021" +
    "\167\023\165\037\223\155\300\157\274\001\001\000\016" +
    "\016\276\021\167\023\165\037\223\155\327\157\274\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\147\315" +
    "\156\316\162\312\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\016\276\021\167\023\165\037\223\155\302" +
    "\157\274\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\016\323\021\167\023\165\037\223\160\322\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\157\326\001\001\000\002\001\001\000\010\147\331" +
    "\161\332\163\334\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\021\343\023\165\037\223\001" +
    "\001\000\010\021\341\023\165\037\223\001\001\000\002" +
    "\001\001\000\004\020\342\001\001\000\002\001\001\000" +
    "\004\020\344\001\001\000\002\001\001\000\012\016\346" +
    "\021\167\023\165\037\223\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\023\355\037\223\001\001\000\002" +
    "\001\001\000\006\023\353\037\223\001\001\000\004\022" +
    "\354\001\001\000\002\001\001\000\004\022\356\001\001" +
    "\000\002\001\001\000\006\040\361\041\362\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\016\365\021\167" +
    "\023\165\037\223\042\364\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\043\370\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\033\376\120\375" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\102\u0102\103\111\105\105\121\u0101\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\130\u0106\001\001\000\002\001\001" +
    "\000\012\016\u0108\021\167\023\165\037\223\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\133\u010b\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\050\u010e\051" +
    "\222\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\130\u0111\001\001\000\002\001\001\000\004\130\u0113\001" +
    "\001\000\002\001\001\000\004\130\u0115\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\144\u011d\145\u011b\146\u011a\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\145\u0121\146\u0120\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\146\u0124\001\001\000\002\001\001\000\002\001\001" +
    "\000\034\016\276\021\167\023\165\037\u0127\123\u0131\127" +
    "\u012b\132\u012d\135\u012c\150\u012f\155\u0130\157\274\164\u012e" +
    "\165\u0128\001\001\000\004\171\u014e\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\166\u0145\001\001\000\004" +
    "\171\u0144\001\001\000\004\171\u0143\001\001\000\004\171" +
    "\u0142\001\001\000\010\151\u0137\152\u013d\154\u013b\001\001" +
    "\000\002\001\001\000\004\171\u0136\001\001\000\004\171" +
    "\u0134\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\153\u0140\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\034\016\276\021\167\023" +
    "\165\037\u0127\123\u0131\127\u012b\132\u012d\135\u012c\150\u013e" +
    "\155\u0130\157\274\164\u012e\165\u0128\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\154\u0141\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\167\u014a" +
    "\001\001\000\020\016\276\021\167\023\165\037\223\155" +
    "\u0149\157\274\172\u0148\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\171\u014d\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\016\233\021\167\023\165\037\223\105\117\001\001\000" +
    "\002\001\001\000\004\106\u0152\001\001\000\002\001\001" +
    "\000\004\130\u0154\001\001\000\004\131\u0156\001\001\000" +
    "\004\130\u0158\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\016\126\021\167\023\165\037" +
    "\134\112\u0179\123\174\127\150\132\161\135\155\143\136" +
    "\001\001\000\026\016\126\021\167\023\165\037\134\112" +
    "\u0178\123\174\127\150\132\161\135\155\143\136\001\001" +
    "\000\002\001\001\000\026\016\126\021\167\023\165\037" +
    "\134\112\u0175\123\174\127\150\132\161\135\155\143\136" +
    "\001\001\000\004\114\u016a\001\001\000\026\016\126\021" +
    "\167\023\165\037\134\112\u0163\123\174\127\150\132\161" +
    "\135\155\143\136\001\001\000\004\115\u0161\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\117\u0165\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\016\126\021\167\023\165\037\134" +
    "\112\u0173\123\174\127\150\132\161\135\155\143\136\001" +
    "\001\000\026\016\126\021\167\023\165\037\134\112\u016e" +
    "\123\174\127\150\132\161\135\155\143\136\001\001\000" +
    "\026\016\126\021\167\023\165\037\134\112\u016b\123\174" +
    "\127\150\132\161\135\155\143\136\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\016\126\021\167\023\165" +
    "\037\134\112\u016d\123\174\127\150\132\161\135\155\143" +
    "\136\001\001\000\002\001\001\000\004\116\u016f\001\001" +
    "\000\002\001\001\000\026\016\126\021\167\023\165\037" +
    "\134\112\u0171\123\174\127\150\132\161\135\155\143\136" +
    "\001\001\000\004\116\u0172\001\001\000\002\001\001\000" +
    "\004\117\u0174\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\016\126\021\167\023\165\037\134\112\u0177\123" +
    "\174\127\150\132\161\135\155\143\136\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\116\u017a\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\033\376\120\u017d" +
    "\001\001\000\002\001\001\000\004\122\u0180\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\137\u0192\175\u0185\177" +
    "\u0189\001\001\000\004\140\u01ad\001\001\000\004\200\u01ac" +
    "\001\001\000\004\200\u01ab\001\001\000\004\200\u01aa\001" +
    "\001\000\002\001\001\000\004\200\u01a9\001\001\000\004" +
    "\200\u01a8\001\001\000\004\200\u01a7\001\001\000\004\200" +
    "\u01a6\001\001\000\004\200\u01a5\001\001\000\004\200\u01a4" +
    "\001\001\000\004\200\u01a3\001\001\000\004\200\u01a2\001" +
    "\001\000\002\001\001\000\004\176\u01a0\001\001\000\004" +
    "\200\u019e\001\001\000\004\200\u0197\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\201\u019a\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\016\276\021\167\023\165\037\223\141\u01b1\155" +
    "\u01b2\157\274\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\142\u01b4\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\016\u01b6" +
    "\021\167\023\165\037\223\001\001\000\002\001\001\000" +
    "\004\130\u01b8\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\016\276\021\167\023\165\037\223\155\u01bf\157" +
    "\274\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\125\u01be\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\016\276\021\167\023\165\037\223\155\u01c1\157\274" +
    "\001\001\000\006\125\u01c4\126\u01c2\001\001\000\002\001" +
    "\001\000\016\016\276\021\167\023\165\037\223\155\u01c6" +
    "\157\274\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\133\u01c9\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\016\u01cc\021" +
    "\167\023\165\037\223\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\130\u01cf\001\001\000\002\001\001\000" +
    "\012\016\u01d1\021\167\023\165\037\223\001\001\000\002" +
    "\001\001\000\012\016\u01d3\021\167\023\165\037\223\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\016\276" +
    "\021\167\023\165\037\223\136\u01d6\155\u01d7\157\274\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\175\u01d9" +
    "\177\u0189\001\001\000\004\140\u01da\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\016\u01dd\021\167\023\165" +
    "\037\223\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\106\u01e0\001\001\000\002\001\001\000\004\173\u01e3" +
    "\001\001\000\004\174\u01e7\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\070\u01fb" +
    "\001\001\000\002\001\001\000\006\071\u01ff\073\u01fd\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\016\u0202\021\167\023\165\037\223\074\u0201\001" +
    "\001\000\002\001\001\000\004\075\u0204\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\033\034" +
    "\062\u020a\067\037\072\040\001\001\000\010\013\u020b\014" +
    "\u0207\015\021\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\056\u0227\001\001\000\004\025" +
    "\u0216\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\061\u0213\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\026\u0218\001\001" +
    "\000\002\001\001\000\006\027\u0225\030\u021d\001\001\000" +
    "\002\001\001\000\006\027\u021c\030\u021d\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\031\u0220\001\001\000" +
    "\004\032\u0222\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\031\u0224\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\057\u0229\001\001\000\002\001\001\000\020\016" +
    "\u0210\021\167\023\165\037\223\054\u022b\055\u020e\060\u020d" +
    "\001\001\000\002\001\001\000\004\015\u022d\001\001\000" +
    "\002\001\001\000\012\016\u022f\021\167\023\165\037\223" +
    "\001\001\000\002\001\001\000\012\006\u0233\007\u0232\010" +
    "\013\033\010\001\001\000\010\007\u0234\010\013\033\010" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\035\u0238" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\036" +
    "\u023b\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$asintactico$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$asintactico$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$asintactico$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    public void report_error(String message, Object info){
        StringBuilder m = new StringBuilder("Error");
        if (info instanceof java_cup.runtime.Symbol){
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
            if (s.left >= 0) {
                m.append(" in line " + (s.left + 1));
                if (s.right >= 0)
                {
                    m.append(", column " + (s.right + 1));
                }
            }
        }
        m.append(" : " + message);
        System.err.println(m);
    }

    public void report_fatal_error(String message, Object info){
        StringBuilder m = new StringBuilder("Error");
        if (info instanceof java_cup.runtime.Symbol){
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
            if (s.left >= 0) {
                m.append(" in line " + (s.left + 1));
                if (s.right >= 0)
                {
                    m.append(", column " + (s.right + 1));
                }
            }
        }
        m.append(" : " + message);
        System.err.println(m);
    }

    public static void main(String[] args){
        try {
            System.out.println("\n*** Resultados finales ***");
            asintactico asin = new asintactico(new Yylex( new FileReader(args[0])));
            Object result = asin.parse().value;            
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$asintactico$actions {
  private final asintactico parser;

  /** Constructor */
  CUP$asintactico$actions(asintactico parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$asintactico$do_action_part00000000(
    int                        CUP$asintactico$act_num,
    java_cup.runtime.lr_parser CUP$asintactico$parser,
    java.util.Stack            CUP$asintactico$stack,
    int                        CUP$asintactico$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$asintactico$result;

      /* select the action based on the action number */
      switch (CUP$asintactico$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Start EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)).value;
		RESULT = start_val;
              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$asintactico$parser.done_parsing();
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Start ::= Start Sentencias 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Start",0, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Start ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Start",0, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Sentencias ::= Del1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sentencias",1, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Del1 ::= DELETE Del2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del1",2, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Del2 ::= TOP OP_PARENTESIS_IZQ Sexp OP_PARENTESIS_DER Del3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del2",3, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-4)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Del2 ::= Del4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del2",3, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Del3 ::= PERCENT Del4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del3",4, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Del3 ::= Del4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del3",4, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Del4 ::= FROM Del5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del4",5, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Del4 ::= Del5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del4",5, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Del5 ::= ObjectS Del6 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del5",6, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Del5 ::= OP_ARROBA IDENTIFICADOR Del6 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del5",6, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Del6 ::= Outcl Del7 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del6",7, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Del6 ::= Del7 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del6",7, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Del7 ::= FROM Jointb Del8 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del7",8, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Del7 ::= Del9 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del7",8, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Del8 ::= OP_COMA Jointb Del8 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del8",9, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Del8 ::= Del9 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del8",9, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Del9 ::= WHERE Expression Del10 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del9",10, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Del9 ::= Del10 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del9",10, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Del10 ::= OP_PUNTOYCOMA 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del10",11, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Del10 ::= GO 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Del10",11, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ObjectS ::= IDENTIFICADOR Object1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("ObjectS",25, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Object1 ::= OP_PUNTO IDENTIFICADOR Object2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Object1",26, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Object1 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Object1",26, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Object2 ::= OP_PUNTO IDENTIFICADOR Object3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Object2",27, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Object2 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Object2",27, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Object3 ::= OP_PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Object3",28, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Object3 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Object3",28, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Sexp ::= Sexp3 Sexp2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp",12, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Sexp2 ::= OP_SUMA Sexp3 Sexp2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp2",14, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Sexp2 ::= OP_RESTA Sexp3 Sexp2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp2",14, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Sexp2 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp2",14, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Sexp3 ::= Sexp5 Sexp4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp3",15, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Sexp4 ::= OP_MULTIPLICACION Sexp5 Sexp4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp4",16, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Sexp4 ::= OP_DIVISION Sexp5 Sexp4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp4",16, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Sexp4 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp4",16, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Sexp5 ::= OP_PARENTESIS_IZQ Sexp OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp5",17, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Sexp5 ::= INTEGER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp5",17, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Sexp5 ::= FLOAT 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp5",17, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Sexp5 ::= OP_ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp5",17, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Sexp5 ::= Agg_fn 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sexp5",17, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Agg_fn ::= AVG OP_PARENTESIS_IZQ Sel_avg OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Agg_fn",29, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Agg_fn ::= COUNT OP_PARENTESIS_IZQ Sel_count OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Agg_fn",29, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Agg_fn ::= MAX OP_PARENTESIS_IZQ Sel_agr OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Agg_fn",29, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Agg_fn ::= MIN OP_PARENTESIS_IZQ Sel_agr OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Agg_fn",29, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Agg_fn ::= SUM OP_PARENTESIS_IZQ Sel_agr OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Agg_fn",29, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Sel_avg ::= Sel_avg1 Sel_avg2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_avg",30, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Sel_avg1 ::= ALL 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_avg1",31, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Sel_avg1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_avg1",31, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Sel_avg1 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_avg1",31, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Sel_avg2 ::= Sexp 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_avg2",32, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Sel_avg2 ::= IDENTIFICADOR Sel_avg3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_avg2",32, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Sel_avg3 ::= OP_PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_avg3",33, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Sel_avg3 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_avg3",33, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Sel_count ::= Sel_count1 Sel_count2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_count",34, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Sel_count1 ::= ALL 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_count1",35, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Sel_count1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_count1",35, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Sel_count1 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_count1",35, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Sel_count2 ::= OP_MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_count2",36, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Sel_count2 ::= IDENTIFICADOR Sel_count3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_count2",36, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Sel_count2 ::= Sexp 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_count2",36, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Sel_count3 ::= OP_PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_count3",37, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Sel_count3 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_count3",37, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Sel_agr ::= Sel_agr1 Sel_agr2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_agr",38, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Sel_agr1 ::= ALL 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_agr1",39, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Sel_agr1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_agr1",39, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Sel_agr1 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_agr1",39, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Sel_agr2 ::= IDENTIFICADOR Sel_agr3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_agr2",40, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Sel_agr2 ::= Sexp 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_agr2",40, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Sel_agr3 ::= OP_PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_agr3",41, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Sel_agr3 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sel_agr3",41, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Outcl ::= OUTPUT Dml1 Outcl1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Outcl",18, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Outcl ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Outcl",18, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Outcl1 ::= INTO Outcl2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Outcl1",19, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Outcl1 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Outcl1",19, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Outcl2 ::= OP_ARROBA IDENTIFICADOR Outcl3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Outcl2",20, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Outcl2 ::= IDENTIFICADOR Outcl3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Outcl2",20, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Outcl3 ::= Colst 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Outcl3",21, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Outcl3 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Outcl3",21, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Colst ::= OP_PARENTESIS_IZQ Colst1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Colst",22, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Colst1 ::= IDENTIFICADOR Colst2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Colst1",23, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Colst2 ::= OP_COMA Colst1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Colst2",24, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Colst2 ::= OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Colst2",24, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Dml1 ::= Dml2 Dml3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dml1",42, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Dml2 ::= Colname 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dml2",43, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Dml2 ::= Sexp 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dml2",43, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Dml3 ::= AS IDENTIFICADOR Dml4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dml3",44, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Dml3 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dml3",44, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Dml4 ::= OP_COMA Dml1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dml4",45, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Dml4 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dml4",45, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Colname ::= IDENTIFICADOR OP_PUNTO Colname1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Colname",46, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Colname1 ::= OP_MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Colname1",47, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Colname1 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Colname1",47, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Jointb ::= Tb_source Jointb1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Jointb",48, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Jointb ::= OP_PARENTESIS_IZQ JOIN OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Jointb",48, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Jointb1 ::= Join_type Jointb3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Jointb1",49, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Jointb1 ::= CROSS JOIN Jointb4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Jointb1",49, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Jointb1 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Jointb1",49, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Jointb2 ::= Join_type Jointb3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Jointb2",50, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Jointb2 ::= CROSS JOIN Jointb4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Jointb2",50, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Jointb3 ::= Tb_source ON SearchC Jointb4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Jointb3",51, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Jointb4 ::= Jointb2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Jointb4",52, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Jointb4 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Jointb4",52, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Tb_source ::= ObjectS Tb_source1 Tb_source2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Tb_source",53, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Tb_source ::= Rowset Tb_source1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Tb_source",53, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Tb_source ::= OP_ARROBA IDENTIFICADOR Tb_source1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Tb_source",53, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Tb_source1 ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Tb_source1",54, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Tb_source1 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Tb_source1",54, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Tb_source1 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Tb_source1",54, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Tb_source2 ::= Sam_cl 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Tb_source2",55, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Tb_source2 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Tb_source2",55, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Rowset ::= OPENDATASOURCE OP_PARENTESIS_IZQ STRING OP_COMA STRING OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Rowset",56, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-5)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Rowset ::= OPENQUERY OP_PARENTESIS_IZQ IDENTIFICADOR OP_COMA STRING OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Rowset",56, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-5)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Sam_cl ::= TABLESAMPLE OP_PARENTESIS_IZQ Sam_cl1 OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sam_cl",57, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Sam_cl1 ::= Sexp Sam_cl2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sam_cl1",58, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Sam_cl2 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sam_cl2",59, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Sam_cl2 ::= ROWS 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sam_cl2",59, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Sam_cl2 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Sam_cl2",59, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Join_type ::= Join_type1 JOIN 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Join_type",60, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Join_type1 ::= INNER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Join_type1",61, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Join_type1 ::= Join_type2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Join_type1",61, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Join_type1 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Join_type1",61, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Join_type2 ::= LEFT Join_type3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Join_type2",62, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Join_type2 ::= RIGHT Join_type3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Join_type2",62, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // Join_type2 ::= FULL Join_type3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Join_type2",62, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // Join_type2 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Join_type2",62, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // Join_type3 ::= OUTER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Join_type3",63, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // Join_type3 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Join_type3",63, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // SearchC ::= SearchC1 SearchC2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchC",64, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // SearchC1 ::= MATCH OP_PARENTESIS_IZQ Gsp OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchC1",65, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // SearchC1 ::= SearchCWM 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchC1",65, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // SearchC2 ::= AND SearchC 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchC2",66, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // SearchCWM ::= NOT Predicate SearchCWM1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchCWM",67, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // SearchCWM ::= OP_PARENTESIS_IZQ SearchCWM OP_PARENTESIS_DER SearchCWM1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchCWM",67, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // SearchCWM1 ::= OR SearchCWM2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchCWM1",68, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // SearchCWM1 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchCWM1",68, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // SearchCWM2 ::= NOT SearchCWM3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchCWM2",69, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // SearchCWM2 ::= SearchCWM3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchCWM2",69, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // SearchCWM3 ::= Predicate SearchCWM1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchCWM3",70, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // SearchCWM3 ::= OP_PARENTESIS_IZQ SearchCWM OP_PARENTESIS_DER SearchCWM1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("SearchCWM3",70, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Predicate ::= Predicate1 Predicate2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate",71, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Predicate ::= CONTAINS OP_PARENTESIS_IZQ Predicate7 OP_COMA Predicate8 OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate",71, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-5)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // Predicate ::= FREETEXT OP_PARENTESIS_IZQ Predicate7 OP_COMA Predicate9 OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate",71, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-5)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Predicate1 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate1",72, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Predicate1 ::= Sexp 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate1",72, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Predicate1 ::= Casewhen 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate1",72, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Predicate1 ::= Agg_fn 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate1",72, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Predicate1 ::= Str_fn 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate1",72, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // Predicate1 ::= Dt_fn 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate1",72, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // Predicate1 ::= Conv 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate1",72, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // Predicate1 ::= Oth_fn 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate1",72, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // Predicate2 ::= Compare_opr Predicate1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate2",73, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // Predicate2 ::= NOT Predicate3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate2",73, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // Predicate2 ::= LIKE Predicate1 Predicate6 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate2",73, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // Predicate2 ::= BETWEEN Predicate1 AND Predicate1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate2",73, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // Predicate2 ::= IS Predicate4 NULL 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate2",73, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // Predicate2 ::= IN Predicate1 Predicate5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate2",73, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // Predicate3 ::= LIKE Predicate1 Predicate6 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate3",74, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // Predicate3 ::= BETWEEN Predicate1 AND Predicate1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate3",74, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // Predicate3 ::= IN Predicate1 Predicate5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate3",74, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // Predicate4 ::= NOT 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate4",75, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // Predicate4 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate4",75, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // Predicate5 ::= OP_COMA Predicate1 Predicate5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate5",76, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // Predicate5 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate5",76, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // Predicate6 ::= ESCAPE STRING 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate6",77, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // Predicate6 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate6",77, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // Predicate7 ::= OP_MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate7",78, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // Predicate7 ::= ObjectS 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate7",78, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // Predicate8 ::= SearchC 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate8",79, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // Predicate9 ::= STRING 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate9",80, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // Predicate9 ::= OP_ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Predicate9",80, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // Casewhen ::= CASE Casewhen1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Casewhen",81, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // Casewhen1 ::= Expression Casewhen2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Casewhen1",82, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // Casewhen1 ::= Casewhen2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Casewhen1",82, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // Casewhen2 ::= WHEN Expression THEN Expression Casewhen3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Casewhen2",83, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-4)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // Casewhen3 ::= ELSE Expression END 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Casewhen3",84, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // Casewhen3 ::= Casewhen2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Casewhen3",84, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // Casewhen3 ::= END 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Casewhen3",84, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // Str_fn ::= LOWER OP_PARENTESIS_IZQ Str_fn1 OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn",85, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // Str_fn ::= TRANSLATE OP_PARENTESIS_IZQ Str_fn1 OP_COMA Str_fn1 OP_COMA Str_fn1 OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn",85, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-7)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // Str_fn ::= UPPER OP_PARENTESIS_IZQ Str_fn1 OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn",85, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // Str_fn ::= CHAR OP_PARENTESIS_IZQ Sexp OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn",85, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // Str_fn ::= LEFT OP_PARENTESIS_IZQ Str_fn1 OP_COMA Sexp OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn",85, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-5)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // Str_fn ::= TRIM OP_PARENTESIS_IZQ Str_fn1 Str_fn2 OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn",85, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-4)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // Str_fn ::= NCHAR OP_PARENTESIS_IZQ Sexp OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn",85, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // Str_fn ::= RIGHT OP_PARENTESIS_IZQ Str_fn1 OP_COMA Sexp OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn",85, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-5)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // Str_fn ::= SPACE OP_PARENTESIS_IZQ Sexp OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn",85, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // Str_fn ::= SUBSTRING OP_PARENTESIS_IZQ Str_fn1 OP_COMA Sexp OP_COMA Sexp OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn",85, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-7)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // Str_fn1 ::= OP_ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn1",86, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // Str_fn1 ::= STRING 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn1",86, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // Str_fn1 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn1",86, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // Str_fn2 ::= FROM Str_fn1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn2",87, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // Str_fn2 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Str_fn2",87, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // Dt_fn ::= CURRENT_TIMESTAMP 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dt_fn",88, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // Dt_fn ::= DAY OP_PARENTESIS_IZQ Dt_fn1 OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dt_fn",88, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // Dt_fn ::= MONTH OP_PARENTESIS_IZQ Dt_fn1 OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dt_fn",88, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // Dt_fn ::= YEAR OP_PARENTESIS_IZQ Dt_fn1 OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dt_fn",88, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // Dt_fn ::= SET LANGUAGE Dt_fn2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dt_fn",88, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // Dt_fn1 ::= STRING 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dt_fn1",89, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // Dt_fn1 ::= OP_ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dt_fn1",89, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // Dt_fn2 ::= OP_ARROBA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dt_fn2",90, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // Dt_fn2 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Dt_fn2",90, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // Conv ::= CAST OP_PARENTESIS_IZQ Conv1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Conv",91, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // Conv ::= CONVERT OP_PARENTESIS_IZQ Conv2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Conv",91, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // Conv1 ::= Expression AS Data_type Conv3 OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Conv1",92, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-4)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // Conv2 ::= Data_type Conv3 Conv4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Conv2",93, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // Conv3 ::= OP_PARENTESIS_IZQ INTEGER OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Conv3",94, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // Conv3 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Conv3",94, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // Conv4 ::= Expression Conv5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Conv4",95, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // Conv5 ::= OP_COMA Sexp 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Conv5",96, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // Conv5 ::= OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Conv5",96, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // Oth_fn ::= NEXT VALUE FOR IDENTIFICADOR Oth_fn1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Oth_fn",97, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-4)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // Oth_fn ::= SYSTEM_USER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Oth_fn",97, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // Oth_fn ::= SESSION_USER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Oth_fn",97, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // Oth_fn ::= NULLIF OP_PARENTESIS_IZQ Expression OP_COMA Expression OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Oth_fn",97, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-5)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // Oth_fn1 ::= OP_PUNTO IDENTIFICADOR Oth_fn2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Oth_fn1",98, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // Oth_fn1 ::= Oth_fn2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Oth_fn1",98, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // Oth_fn2 ::= OP_PUNTO IDENTIFICADOR Oth_fn3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Oth_fn2",99, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // Oth_fn2 ::= Oth_fn3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Oth_fn2",99, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // Oth_fn3 ::= OVER ORDER BY Orderb 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Oth_fn3",100, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-3)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // Compare_opr ::= OP_MAYOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Compare_opr",101, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // Compare_opr ::= OP_MENOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Compare_opr",101, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // Compare_opr ::= OP_MAYORIGUAL 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Compare_opr",101, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // Compare_opr ::= OP_MENORIGUAL 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Compare_opr",101, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // Compare_opr ::= OP_DIFERENTE 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Compare_opr",101, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // Orderb ::= Selist Orderb1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Orderb",102, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // Orderb1 ::= Orderb2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Orderb1",103, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // Orderb1 ::= OP_COMA Orderb 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Orderb1",103, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // Orderb2 ::= COLLATE Orderb3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Orderb2",104, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // Orderb2 ::= Orderb4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Orderb2",104, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // Orderb3 ::= IDENTIFICADOR Orderb4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Orderb3",105, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // Orderb4 ::= ASC 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Orderb4",106, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // Orderb4 ::= DESC 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Orderb4",106, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // Expression ::= Sexp Expression1 Expression3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression",107, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // Expression ::= Expression2 OP_SUMA Expression2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression",107, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // Expression ::= NOT Expression Expression4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression",107, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // Expression ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression",107, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // Expression1 ::= Ar_opr 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression1",108, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // Expression1 ::= Compare_opr 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression1",108, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // Expression1 ::= OP_SUMA 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression1",108, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // Expression2 ::= STRING 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression2",109, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // Expression2 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression2",109, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // Expression3 ::= Sexp 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression3",110, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // Expression3 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression3",110, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // Expression3 ::= STRING 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression3",110, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // Expression4 ::= Compare_opr 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression4",111, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // Expression4 ::= Logic_opr 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Expression4",111, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // Ar_opr ::= OP_RESTA 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Ar_opr",112, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // Ar_opr ::= OP_MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Ar_opr",112, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // Ar_opr ::= OP_DIVISION 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Ar_opr",112, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // Ar_opr ::= OP_PORCENTAJE 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Ar_opr",112, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // Logic_opr ::= BETWEEN 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Logic_opr",113, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // Logic_opr ::= IN 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Logic_opr",113, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // Logic_opr ::= LIKE 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Logic_opr",113, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // Selist ::= Selist1 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist",114, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // Selist1 ::= OP_MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist1",115, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // Selist1 ::= IDENTIFICADOR Selist2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist1",115, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // Selist1 ::= Expression Selist5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist1",115, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // Selist1 ::= Agg_fn Selist5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist1",115, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // Selist1 ::= Str_fn Selist5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist1",115, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // Selist1 ::= Dt_fn Selist5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist1",115, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // Selist1 ::= Conv Selist5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist1",115, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // Selist1 ::= Casewhen Selist5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist1",115, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // Selist2 ::= OP_PUNTO Selist3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist2",116, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // Selist2 ::= OP_IGUAL Selist6 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist2",116, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // Selist2 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist2",116, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // Selist3 ::= OP_MULTIPLICACION 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist3",117, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // Selist3 ::= IDENTIFICADOR Selist5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist3",117, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // Selist5 ::= AS IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist5",119, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // Selist5 ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist5",119, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // Selist5 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist5",119, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // Selist6 ::= Expression 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Selist6",120, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // Gsp ::= IDENTIFICADOR Gsp1 IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Gsp",121, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // Gsp1 ::= OP_MENOR OP_RESTA OP_PARENTESIS_IZQ IDENTIFICADOR OP_PARENTESIS_DER OP_RESTA 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Gsp1",122, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-5)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // Gsp1 ::= OP_RESTA OP_PARENTESIS_IZQ IDENTIFICADOR OP_PARENTESIS_DER OP_RESTA OP_MAYOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Gsp1",122, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-5)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // Data_type ::= IDENTIFICADOR Data_type2 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type",123, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // Data_type ::= Data_type3 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type",123, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // Data_type2 ::= OP_PUNTO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type2",124, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // Data_type3 ::= BIT Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // Data_type3 ::= INT Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // Data_type3 ::= INTEGER Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // Data_type3 ::= FLOAT Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // Data_type3 ::= VARCHAR Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // Data_type3 ::= DATE Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // Data_type3 ::= REAL Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // Data_type3 ::= DECIMAL Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // Data_type3 ::= NUMERIC Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // Data_type3 ::= SMALLINT Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // Data_type3 ::= TIME Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // Data_type3 ::= CHAR Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // Data_type3 ::= NCHAR Data_type4 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type3",125, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-1)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // Data_type4 ::= OP_PARENTESIS_IZQ INTCONSTANT Data_type5 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type4",126, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // Data_type4 ::= 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type4",126, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // Data_type5 ::= OP_COMA INTCONSTANT OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type5",127, ((java_cup.runtime.Symbol)CUP$asintactico$stack.elementAt(CUP$asintactico$top-2)), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // Data_type5 ::= OP_PARENTESIS_DER 
            {
              Object RESULT =null;

              CUP$asintactico$result = parser.getSymbolFactory().newSymbol("Data_type5",127, ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$asintactico$stack.peek()), RESULT);
            }
          return CUP$asintactico$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$asintactico$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$asintactico$do_action(
    int                        CUP$asintactico$act_num,
    java_cup.runtime.lr_parser CUP$asintactico$parser,
    java.util.Stack            CUP$asintactico$stack,
    int                        CUP$asintactico$top)
    throws java.lang.Exception
    {
              return CUP$asintactico$do_action_part00000000(
                               CUP$asintactico$act_num,
                               CUP$asintactico$parser,
                               CUP$asintactico$stack,
                               CUP$asintactico$top);
    }
}

}
